A small number of constants live in the built-in namespace.  They are:
False
The false value of the
type. Assignments to
False
are illegal and raise a
.
True
The true value of the
type. Assignments to
True
are illegal and raise a
.
None
An object frequently used to represent the absence of a value, as when
default arguments are not passed to a function. Assignments to
None
are illegal and raise a
.
None
is the sole instance of the
type.
NotImplemented
A special value which should be returned by the binary special methods
(e.g.
,
,
,
,
etc.) to indicate that the operation is not implemented with respect to
the other type; may be returned by the in-place binary special methods
(e.g.
,
, etc.) for the same purpose.
It should not be evaluated in a boolean context.
NotImplemented
is the sole instance of the
type.
Note
When a binary (or in-place) method returns
NotImplemented
the
interpreter will try the reflected operation on the other type (or some
other fallback, depending on the operator).  If all attempts return
NotImplemented
, the interpreter will raise an appropriate exception.
Incorrectly returning
NotImplemented
will result in a misleading
error message or the
NotImplemented
value being returned to Python code.
See
for examples.
Caution
NotImplemented
and
NotImplementedError
are not
interchangeable. This constant should only be used as described
above; see
for details on correct usage
of the exception.
Changed in version 3.9:
Evaluating
NotImplemented
in a boolean context is deprecated. While
it currently evaluates as true, it will emit a
.
It will raise a
in a future version of Python.
Ellipsis
The same as the ellipsis literal â
...
â. Special value used mostly in conjunction
with extended slicing syntax for user-defined container data types.
Ellipsis
is the sole instance of the
type.
__debug__
This constant is true if Python was not started with an
option.
See also the
statement.
Note
The names
,
,
and
cannot be reassigned (assignments to them, even as an attribute name, raise
), so they can be considered âtrueâ constants.
The
module (which is imported automatically during startup, except
if the
command-line option is given) adds several constants to the
built-in namespace.  They are useful for the interactive interpreter shell and
should not be used in programs.
quit
(
code
=
None
)
exit
(
code
=
None
)
Objects that when printed, print a message like âUse quit() or Ctrl-D
(i.e. EOF) to exitâ, and when called, raise
with the
specified exit code.
help
Object that when printed, prints the message âType help() for interactive
help, or help(object) for help about object.â, and when called,
acts as described
.
copyright
credits
Objects that when printed or called, print the text of copyright or
credits, respectively.
license
Object that when printed, prints the message âType license() to see the
full license textâ, and when called, displays the full license text in a
pager-like fashion (one screen at a time).