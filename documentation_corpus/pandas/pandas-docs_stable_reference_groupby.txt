GroupBy — pandas 2.3.0 documentation
Skip to main content
Back to top
Ctrl
+
K
Site Navigation
Getting started
User Guide
API reference
Development
Release notes
GitHub
Twitter
Mastodon
Site Navigation
Getting started
User Guide
API reference
Development
Release notes
GitHub
Twitter
Mastodon
Input/output
General functions
Series
DataFrame
pandas arrays, scalars, and data types
Index objects
Date offsets
Window
GroupBy
pandas.core.groupby.DataFrameGroupBy.__iter__
pandas.core.groupby.SeriesGroupBy.__iter__
pandas.core.groupby.DataFrameGroupBy.groups
pandas.core.groupby.SeriesGroupBy.groups
pandas.core.groupby.DataFrameGroupBy.indices
pandas.core.groupby.SeriesGroupBy.indices
pandas.core.groupby.DataFrameGroupBy.get_group
pandas.core.groupby.SeriesGroupBy.get_group
pandas.Grouper
pandas.NamedAgg
pandas.core.groupby.SeriesGroupBy.apply
pandas.core.groupby.DataFrameGroupBy.apply
pandas.core.groupby.SeriesGroupBy.agg
pandas.core.groupby.DataFrameGroupBy.agg
pandas.core.groupby.SeriesGroupBy.aggregate
pandas.core.groupby.DataFrameGroupBy.aggregate
pandas.core.groupby.SeriesGroupBy.transform
pandas.core.groupby.DataFrameGroupBy.transform
pandas.core.groupby.SeriesGroupBy.pipe
pandas.core.groupby.DataFrameGroupBy.pipe
pandas.core.groupby.DataFrameGroupBy.filter
pandas.core.groupby.SeriesGroupBy.filter
pandas.core.groupby.DataFrameGroupBy.all
pandas.core.groupby.DataFrameGroupBy.any
pandas.core.groupby.DataFrameGroupBy.bfill
pandas.core.groupby.DataFrameGroupBy.corr
pandas.core.groupby.DataFrameGroupBy.corrwith
pandas.core.groupby.DataFrameGroupBy.count
pandas.core.groupby.DataFrameGroupBy.cov
pandas.core.groupby.DataFrameGroupBy.cumcount
pandas.core.groupby.DataFrameGroupBy.cummax
pandas.core.groupby.DataFrameGroupBy.cummin
pandas.core.groupby.DataFrameGroupBy.cumprod
pandas.core.groupby.DataFrameGroupBy.cumsum
pandas.core.groupby.DataFrameGroupBy.describe
pandas.core.groupby.DataFrameGroupBy.diff
pandas.core.groupby.DataFrameGroupBy.ffill
pandas.core.groupby.DataFrameGroupBy.fillna
pandas.core.groupby.DataFrameGroupBy.first
pandas.core.groupby.DataFrameGroupBy.head
pandas.core.groupby.DataFrameGroupBy.idxmax
pandas.core.groupby.DataFrameGroupBy.idxmin
pandas.core.groupby.DataFrameGroupBy.last
pandas.core.groupby.DataFrameGroupBy.max
pandas.core.groupby.DataFrameGroupBy.mean
pandas.core.groupby.DataFrameGroupBy.median
pandas.core.groupby.DataFrameGroupBy.min
pandas.core.groupby.DataFrameGroupBy.ngroup
pandas.core.groupby.DataFrameGroupBy.nth
pandas.core.groupby.DataFrameGroupBy.nunique
pandas.core.groupby.DataFrameGroupBy.ohlc
pandas.core.groupby.DataFrameGroupBy.pct_change
pandas.core.groupby.DataFrameGroupBy.prod
pandas.core.groupby.DataFrameGroupBy.quantile
pandas.core.groupby.DataFrameGroupBy.rank
pandas.core.groupby.DataFrameGroupBy.resample
pandas.core.groupby.DataFrameGroupBy.rolling
pandas.core.groupby.DataFrameGroupBy.sample
pandas.core.groupby.DataFrameGroupBy.sem
pandas.core.groupby.DataFrameGroupBy.shift
pandas.core.groupby.DataFrameGroupBy.size
pandas.core.groupby.DataFrameGroupBy.skew
pandas.core.groupby.DataFrameGroupBy.std
pandas.core.groupby.DataFrameGroupBy.sum
pandas.core.groupby.DataFrameGroupBy.var
pandas.core.groupby.DataFrameGroupBy.tail
pandas.core.groupby.DataFrameGroupBy.take
pandas.core.groupby.DataFrameGroupBy.value_counts
pandas.core.groupby.SeriesGroupBy.all
pandas.core.groupby.SeriesGroupBy.any
pandas.core.groupby.SeriesGroupBy.bfill
pandas.core.groupby.SeriesGroupBy.corr
pandas.core.groupby.SeriesGroupBy.count
pandas.core.groupby.SeriesGroupBy.cov
pandas.core.groupby.SeriesGroupBy.cumcount
pandas.core.groupby.SeriesGroupBy.cummax
pandas.core.groupby.SeriesGroupBy.cummin
pandas.core.groupby.SeriesGroupBy.cumprod
pandas.core.groupby.SeriesGroupBy.cumsum
pandas.core.groupby.SeriesGroupBy.describe
pandas.core.groupby.SeriesGroupBy.diff
pandas.core.groupby.SeriesGroupBy.ffill
pandas.core.groupby.SeriesGroupBy.fillna
pandas.core.groupby.SeriesGroupBy.first
pandas.core.groupby.SeriesGroupBy.head
pandas.core.groupby.SeriesGroupBy.last
pandas.core.groupby.SeriesGroupBy.idxmax
pandas.core.groupby.SeriesGroupBy.idxmin
pandas.core.groupby.SeriesGroupBy.is_monotonic_increasing
pandas.core.groupby.SeriesGroupBy.is_monotonic_decreasing
pandas.core.groupby.SeriesGroupBy.max
pandas.core.groupby.SeriesGroupBy.mean
pandas.core.groupby.SeriesGroupBy.median
pandas.core.groupby.SeriesGroupBy.min
pandas.core.groupby.SeriesGroupBy.ngroup
pandas.core.groupby.SeriesGroupBy.nlargest
pandas.core.groupby.SeriesGroupBy.nsmallest
pandas.core.groupby.SeriesGroupBy.nth
pandas.core.groupby.SeriesGroupBy.nunique
pandas.core.groupby.SeriesGroupBy.unique
pandas.core.groupby.SeriesGroupBy.ohlc
pandas.core.groupby.SeriesGroupBy.pct_change
pandas.core.groupby.SeriesGroupBy.prod
pandas.core.groupby.SeriesGroupBy.quantile
pandas.core.groupby.SeriesGroupBy.rank
pandas.core.groupby.SeriesGroupBy.resample
pandas.core.groupby.SeriesGroupBy.rolling
pandas.core.groupby.SeriesGroupBy.sample
pandas.core.groupby.SeriesGroupBy.sem
pandas.core.groupby.SeriesGroupBy.shift
pandas.core.groupby.SeriesGroupBy.size
pandas.core.groupby.SeriesGroupBy.skew
pandas.core.groupby.SeriesGroupBy.std
pandas.core.groupby.SeriesGroupBy.sum
pandas.core.groupby.SeriesGroupBy.var
pandas.core.groupby.SeriesGroupBy.tail
pandas.core.groupby.SeriesGroupBy.take
pandas.core.groupby.SeriesGroupBy.value_counts
pandas.core.groupby.DataFrameGroupBy.boxplot
pandas.core.groupby.DataFrameGroupBy.hist
pandas.core.groupby.SeriesGroupBy.hist
pandas.core.groupby.DataFrameGroupBy.plot
pandas.core.groupby.SeriesGroupBy.plot
Resampling
Style
Plotting
Options and settings
Extensions
Testing
Missing values
API reference
GroupBy
GroupBy
#
pandas.api.typing.DataFrameGroupBy
and
pandas.api.typing.SeriesGroupBy
instances are returned by groupby calls
pandas.DataFrame.groupby()
and
pandas.Series.groupby()
respectively.
Indexing, iteration
#
DataFrameGroupBy.__iter__
()
Groupby iterator.
SeriesGroupBy.__iter__
()
Groupby iterator.
DataFrameGroupBy.groups
Dict {group name -> group labels}.
SeriesGroupBy.groups
Dict {group name -> group labels}.
DataFrameGroupBy.indices
Dict {group name -> group indices}.
SeriesGroupBy.indices
Dict {group name -> group indices}.
DataFrameGroupBy.get_group
(name[,Â obj])
Construct DataFrame from group with provided name.
SeriesGroupBy.get_group
(name[,Â obj])
Construct DataFrame from group with provided name.
Grouper
(*args,Â **kwargs)
A Grouper allows the user to specify a groupby instruction for an object.
Function application helper
#
NamedAgg
(column,Â aggfunc)
Helper for column specific aggregation with control over output column names.
Function application
#
SeriesGroupBy.apply
(func,Â *args,Â **kwargs)
Apply function
func
group-wise and combine the results together.
DataFrameGroupBy.apply
(func,Â *args[,Â ...])
Apply function
func
group-wise and combine the results together.
SeriesGroupBy.agg
([func,Â engine,Â engine_kwargs])
Aggregate using one or more operations over the specified axis.
DataFrameGroupBy.agg
([func,Â engine,Â ...])
Aggregate using one or more operations over the specified axis.
SeriesGroupBy.aggregate
([func,Â engine,Â ...])
Aggregate using one or more operations over the specified axis.
DataFrameGroupBy.aggregate
([func,Â engine,Â ...])
Aggregate using one or more operations over the specified axis.
SeriesGroupBy.transform
(func,Â *args[,Â ...])
Call function producing a same-indexed Series on each group.
DataFrameGroupBy.transform
(func,Â *args[,Â ...])
Call function producing a same-indexed DataFrame on each group.
SeriesGroupBy.pipe
(func,Â *args,Â **kwargs)
Apply a
func
with arguments to this GroupBy object and return its result.
DataFrameGroupBy.pipe
(func,Â *args,Â **kwargs)
Apply a
func
with arguments to this GroupBy object and return its result.
DataFrameGroupBy.filter
(func[,Â dropna])
Filter elements from groups that don't satisfy a criterion.
SeriesGroupBy.filter
(func[,Â dropna])
Filter elements from groups that don't satisfy a criterion.
DataFrameGroupBy
computations / descriptive stats
#
DataFrameGroupBy.all
([skipna])
Return True if all values in the group are truthful, else False.
DataFrameGroupBy.any
([skipna])
Return True if any value in the group is truthful, else False.
DataFrameGroupBy.bfill
([limit])
Backward fill the values.
DataFrameGroupBy.corr
([method,Â min_periods,Â ...])
Compute pairwise correlation of columns, excluding NA/null values.
DataFrameGroupBy.corrwith
(other[,Â axis,Â ...])
Compute pairwise correlation.
DataFrameGroupBy.count
()
Compute count of group, excluding missing values.
DataFrameGroupBy.cov
([min_periods,Â ddof,Â ...])
Compute pairwise covariance of columns, excluding NA/null values.
DataFrameGroupBy.cumcount
([ascending])
Number each item in each group from 0 to the length of that group - 1.
DataFrameGroupBy.cummax
([axis,Â numeric_only])
Cumulative max for each group.
DataFrameGroupBy.cummin
([axis,Â numeric_only])
Cumulative min for each group.
DataFrameGroupBy.cumprod
([axis])
Cumulative product for each group.
DataFrameGroupBy.cumsum
([axis])
Cumulative sum for each group.
DataFrameGroupBy.describe
([percentiles,Â ...])
Generate descriptive statistics.
DataFrameGroupBy.diff
([periods,Â axis])
First discrete difference of element.
DataFrameGroupBy.ffill
([limit])
Forward fill the values.
DataFrameGroupBy.fillna
([value,Â method,Â ...])
(DEPRECATED) Fill NA/NaN values using the specified method within groups.
DataFrameGroupBy.first
([numeric_only,Â ...])
Compute the first entry of each column within each group.
DataFrameGroupBy.head
([n])
Return first n rows of each group.
DataFrameGroupBy.idxmax
([axis,Â skipna,Â ...])
Return index of first occurrence of maximum over requested axis.
DataFrameGroupBy.idxmin
([axis,Â skipna,Â ...])
Return index of first occurrence of minimum over requested axis.
DataFrameGroupBy.last
([numeric_only,Â ...])
Compute the last entry of each column within each group.
DataFrameGroupBy.max
([numeric_only,Â ...])
Compute max of group values.
DataFrameGroupBy.mean
([numeric_only,Â ...])
Compute mean of groups, excluding missing values.
DataFrameGroupBy.median
([numeric_only])
Compute median of groups, excluding missing values.
DataFrameGroupBy.min
([numeric_only,Â ...])
Compute min of group values.
DataFrameGroupBy.ngroup
([ascending])
Number each group from 0 to the number of groups - 1.
DataFrameGroupBy.nth
Take the nth row from each group if n is an int, otherwise a subset of rows.
DataFrameGroupBy.nunique
([dropna])
Return DataFrame with counts of unique elements in each position.
DataFrameGroupBy.ohlc
()
Compute open, high, low and close values of a group, excluding missing values.
DataFrameGroupBy.pct_change
([periods,Â ...])
Calculate pct_change of each value to previous entry in group.
DataFrameGroupBy.prod
([numeric_only,Â min_count])
Compute prod of group values.
DataFrameGroupBy.quantile
([q,Â ...])
Return group values at the given quantile, a la numpy.percentile.
DataFrameGroupBy.rank
([method,Â ascending,Â ...])
Provide the rank of values within each group.
DataFrameGroupBy.resample
(rule,Â *args[,Â ...])
Provide resampling when using a TimeGrouper.
DataFrameGroupBy.rolling
(*args,Â **kwargs)
Return a rolling grouper, providing rolling functionality per group.
DataFrameGroupBy.sample
([n,Â frac,Â replace,Â ...])
Return a random sample of items from each group.
DataFrameGroupBy.sem
([ddof,Â numeric_only])
Compute standard error of the mean of groups, excluding missing values.
DataFrameGroupBy.shift
([periods,Â freq,Â ...])
Shift each group by periods observations.
DataFrameGroupBy.size
()
Compute group sizes.
DataFrameGroupBy.skew
([axis,Â skipna,Â ...])
Return unbiased skew within groups.
DataFrameGroupBy.std
([ddof,Â engine,Â ...])
Compute standard deviation of groups, excluding missing values.
DataFrameGroupBy.sum
([numeric_only,Â ...])
Compute sum of group values.
DataFrameGroupBy.var
([ddof,Â engine,Â ...])
Compute variance of groups, excluding missing values.
DataFrameGroupBy.tail
([n])
Return last n rows of each group.
DataFrameGroupBy.take
(indices[,Â axis])
Return the elements in the given
positional
indices in each group.
DataFrameGroupBy.value_counts
([subset,Â ...])
Return a Series or DataFrame containing counts of unique rows.
SeriesGroupBy
computations / descriptive stats
#
SeriesGroupBy.all
([skipna])
Return True if all values in the group are truthful, else False.
SeriesGroupBy.any
([skipna])
Return True if any value in the group is truthful, else False.
SeriesGroupBy.bfill
([limit])
Backward fill the values.
SeriesGroupBy.corr
(other[,Â method,Â min_periods])
Compute correlation with
other
Series, excluding missing values.
SeriesGroupBy.count
()
Compute count of group, excluding missing values.
SeriesGroupBy.cov
(other[,Â min_periods,Â ddof])
Compute covariance with Series, excluding missing values.
SeriesGroupBy.cumcount
([ascending])
Number each item in each group from 0 to the length of that group - 1.
SeriesGroupBy.cummax
([axis,Â numeric_only])
Cumulative max for each group.
SeriesGroupBy.cummin
([axis,Â numeric_only])
Cumulative min for each group.
SeriesGroupBy.cumprod
([axis])
Cumulative product for each group.
SeriesGroupBy.cumsum
([axis])
Cumulative sum for each group.
SeriesGroupBy.describe
([percentiles,Â ...])
Generate descriptive statistics.
SeriesGroupBy.diff
([periods,Â axis])
First discrete difference of element.
SeriesGroupBy.ffill
([limit])
Forward fill the values.
SeriesGroupBy.fillna
([value,Â method,Â axis,Â ...])
(DEPRECATED) Fill NA/NaN values using the specified method within groups.
SeriesGroupBy.first
([numeric_only,Â ...])
Compute the first entry of each column within each group.
SeriesGroupBy.head
([n])
Return first n rows of each group.
SeriesGroupBy.last
([numeric_only,Â ...])
Compute the last entry of each column within each group.
SeriesGroupBy.idxmax
([axis,Â skipna])
Return the row label of the maximum value.
SeriesGroupBy.idxmin
([axis,Â skipna])
Return the row label of the minimum value.
SeriesGroupBy.is_monotonic_increasing
Return whether each group's values are monotonically increasing.
SeriesGroupBy.is_monotonic_decreasing
Return whether each group's values are monotonically decreasing.
SeriesGroupBy.max
([numeric_only,Â min_count,Â ...])
Compute max of group values.
SeriesGroupBy.mean
([numeric_only,Â engine,Â ...])
Compute mean of groups, excluding missing values.
SeriesGroupBy.median
([numeric_only])
Compute median of groups, excluding missing values.
SeriesGroupBy.min
([numeric_only,Â min_count,Â ...])
Compute min of group values.
SeriesGroupBy.ngroup
([ascending])
Number each group from 0 to the number of groups - 1.
SeriesGroupBy.nlargest
([n,Â keep])
Return the largest
n
elements.
SeriesGroupBy.nsmallest
([n,Â keep])
Return the smallest
n
elements.
SeriesGroupBy.nth
Take the nth row from each group if n is an int, otherwise a subset of rows.
SeriesGroupBy.nunique
([dropna])
Return number of unique elements in the group.
SeriesGroupBy.unique
()
Return unique values for each group.
SeriesGroupBy.ohlc
()
Compute open, high, low and close values of a group, excluding missing values.
SeriesGroupBy.pct_change
([periods,Â ...])
Calculate pct_change of each value to previous entry in group.
SeriesGroupBy.prod
([numeric_only,Â min_count])
Compute prod of group values.
SeriesGroupBy.quantile
([q,Â interpolation,Â ...])
Return group values at the given quantile, a la numpy.percentile.
SeriesGroupBy.rank
([method,Â ascending,Â ...])
Provide the rank of values within each group.
SeriesGroupBy.resample
(rule,Â *args[,Â ...])
Provide resampling when using a TimeGrouper.
SeriesGroupBy.rolling
(*args,Â **kwargs)
Return a rolling grouper, providing rolling functionality per group.
SeriesGroupBy.sample
([n,Â frac,Â replace,Â ...])
Return a random sample of items from each group.
SeriesGroupBy.sem
([ddof,Â numeric_only])
Compute standard error of the mean of groups, excluding missing values.
SeriesGroupBy.shift
([periods,Â freq,Â axis,Â ...])
Shift each group by periods observations.
SeriesGroupBy.size
()
Compute group sizes.
SeriesGroupBy.skew
([axis,Â skipna,Â numeric_only])
Return unbiased skew within groups.
SeriesGroupBy.std
([ddof,Â engine,Â ...])
Compute standard deviation of groups, excluding missing values.
SeriesGroupBy.sum
([numeric_only,Â min_count,Â ...])
Compute sum of group values.
SeriesGroupBy.var
([ddof,Â engine,Â ...])
Compute variance of groups, excluding missing values.
SeriesGroupBy.tail
([n])
Return last n rows of each group.
SeriesGroupBy.take
(indices[,Â axis])
Return the elements in the given
positional
indices in each group.
SeriesGroupBy.value_counts
([normalize,Â ...])
Plotting and visualization
#
DataFrameGroupBy.boxplot
([subplots,Â column,Â ...])
Make box plots from DataFrameGroupBy data.
DataFrameGroupBy.hist
([column,Â by,Â grid,Â ...])
Make a histogram of the DataFrame's columns.
SeriesGroupBy.hist
([by,Â ax,Â grid,Â ...])
Draw histogram of the input series using matplotlib.
DataFrameGroupBy.plot
Make plots of Series or DataFrame.
SeriesGroupBy.plot
Make plots of Series or DataFrame.
previous
pandas.api.indexers.VariableOffsetWindowIndexer
next
pandas.core.groupby.DataFrameGroupBy.__iter__
On this page
Indexing, iteration
Function application helper
Function application
DataFrameGroupBy
computations / descriptive stats
SeriesGroupBy
computations / descriptive stats
Plotting and visualization
Show Source
&copy 2025, pandas via
NumFOCUS, Inc.
Hosted by
OVHcloud
.
Created using
Sphinx
8.1.3.
Built with the
PyData Sphinx Theme
0.14.4.