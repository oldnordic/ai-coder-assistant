pandas.api.indexers.check_array_indexer — pandas 2.3.0 documentation
Skip to main content
Back to top
Ctrl
+
K
Site Navigation
Getting started
User Guide
API reference
Development
Release notes
GitHub
Twitter
Mastodon
Site Navigation
Getting started
User Guide
API reference
Development
Release notes
GitHub
Twitter
Mastodon
Input/output
General functions
Series
DataFrame
pandas arrays, scalars, and data types
Index objects
Date offsets
Window
GroupBy
Resampling
Style
Plotting
Options and settings
Extensions
pandas.api.extensions.register_extension_dtype
pandas.api.extensions.register_dataframe_accessor
pandas.api.extensions.register_series_accessor
pandas.api.extensions.register_index_accessor
pandas.api.extensions.ExtensionDtype
pandas.api.extensions.ExtensionArray
pandas.arrays.NumpyExtensionArray
pandas.api.indexers.check_array_indexer
Testing
Missing values
API reference
Extensions
pandas.api.i...
pandas.api.indexers.check_array_indexer
#
pandas.api.indexers.
check_array_indexer
(
array
,
indexer
)
[source]
#
Check if
indexer
is a valid array indexer for
array
.
For a boolean mask,
array
and
indexer
are checked to have the same
length. The dtype is validated, and if it is an integer or boolean
ExtensionArray, it is checked if there are missing values present, and
it is converted to the appropriate numpy array. Other dtypes will raise
an error.
Non-array indexers (integer, slice, Ellipsis, tuples, ..) are passed
through as is.
Parameters
:
array
array-like
The array that is being indexed (only used for the length).
indexer
array-like or list-like
The array-like thatâs used to index. List-like input that is not yet
a numpy array or an ExtensionArray is converted to one. Other input
types are passed through as is.
Returns
:
numpy.ndarray
The validated indexer as a numpy array that can be used to index.
Raises
:
IndexError
When the lengths donât match.
ValueError
When
indexer
cannot be converted to a numpy ndarray to index
(e.g. presence of missing values).
See also
api.types.is_bool_dtype
Check if
key
is of boolean dtype.
Examples
When checking a boolean mask, a boolean ndarray is returned when the
arguments are all valid.
>>>
mask
=
pd
.
array
([
True
,
False
])
>>>
arr
=
pd
.
array
([
1
,
2
])
>>>
pd
.
api
.
indexers
.
check_array_indexer
(
arr
,
mask
)
array([ True, False])
An IndexError is raised when the lengths donât match.
>>>
mask
=
pd
.
array
([
True
,
False
,
True
])
>>>
pd
.
api
.
indexers
.
check_array_indexer
(
arr
,
mask
)
Traceback (most recent call last):
...
IndexError
:
Boolean index has wrong length: 3 instead of 2.
NA values in a boolean array are treated as False.
>>>
mask
=
pd
.
array
([
True
,
pd
.
NA
])
>>>
pd
.
api
.
indexers
.
check_array_indexer
(
arr
,
mask
)
array([ True, False])
A numpy boolean mask will get passed through (if the length is correct):
>>>
mask
=
np
.
array
([
True
,
False
])
>>>
pd
.
api
.
indexers
.
check_array_indexer
(
arr
,
mask
)
array([ True, False])
Similarly for integer indexers, an integer ndarray is returned when it is
a valid indexer, otherwise an error is  (for integer indexers, a matching
length is not required):
>>>
indexer
=
pd
.
array
([
0
,
2
],
dtype
=
"Int64"
)
>>>
arr
=
pd
.
array
([
1
,
2
,
3
])
>>>
pd
.
api
.
indexers
.
check_array_indexer
(
arr
,
indexer
)
array([0, 2])
>>>
indexer
=
pd
.
array
([
0
,
pd
.
NA
],
dtype
=
"Int64"
)
>>>
pd
.
api
.
indexers
.
check_array_indexer
(
arr
,
indexer
)
Traceback (most recent call last):
...
ValueError
:
Cannot index with an integer indexer containing NA values
For non-integer/boolean dtypes, an appropriate error is raised:
>>>
indexer
=
np
.
array
([
0.
,
2.
],
dtype
=
"float64"
)
>>>
pd
.
api
.
indexers
.
check_array_indexer
(
arr
,
indexer
)
Traceback (most recent call last):
...
IndexError
:
arrays used as indices must be of integer or boolean type
previous
pandas.arrays.NumpyExtensionArray
next
Testing
On this page
check_array_indexer()
Show Source
&copy 2025, pandas via
NumFOCUS, Inc.
Hosted by
OVHcloud
.
Created using
Sphinx
8.1.3.
Built with the
PyData Sphinx Theme
0.14.4.