Installing scikit-learn — scikit-learn 1.7.0 documentation
Skip to main content
Back to top
Ctrl
+
K
Install
User Guide
API
Examples
Community
More
Getting Started
Release History
Glossary
Development
FAQ
Support
Related Projects
Roadmap
Governance
About us
GitHub
Choose version
Install
User Guide
API
Examples
Community
Getting Started
Release History
Glossary
Development
FAQ
Support
Related Projects
Roadmap
Governance
About us
GitHub
Choose version
Installing scikit-learn
Installing scikit-learn
#
There are different ways to install scikit-learn:
Install the latest official release
. This
is the best approach for most users. It will provide a stable version
and pre-built packages are available for most platforms.
Install the version of scikit-learn provided by your
operating system or Python distribution
.
This is a quick option for those who have operating systems or Python
distributions that distribute scikit-learn.
It might not provide the latest release version.
Building the package from source
. This is best for users who want the
latest-and-greatest features and aren’t afraid of running
brand-new code. This is also needed for users who wish to contribute to the
project.
Installing the latest release
#
Windows
pip
Install the 64-bit version of Python 3, for instance from the
official website
.
Now create a
virtual environment (venv)
and install scikit-learn.
Note that the virtual environment is optional but strongly recommended, in
order to avoid potential conflicts with other packages.
python
-m
venv
sklearn-env
sklearn-env
\
Scripts
\
activate
# activate
pip
install
-U
scikit-learn
In order to check your installation, you can use:
python
-m
pip
show
scikit-learn
# show scikit-learn version and location
python
-m
pip
freeze
# show all installed packages in the environment
python
-c
"import sklearn; sklearn.show_versions()"
conda
Install conda using the
conda-forge installers
(no
administrator permission required). Then run:
conda
create
-n
sklearn-env
-c
conda-forge
scikit-learn
conda
activate
sklearn-env
In order to check your installation, you can use:
conda
list
scikit-learn
# show scikit-learn version and location
conda
list
# show all installed packages in the environment
python
-c
"import sklearn; sklearn.show_versions()"
MacOS
pip
Install Python 3 using
homebrew
(
brew
install
python
)
or by manually installing the package from the
official website
.
Now create a
virtual environment (venv)
and install scikit-learn.
Note that the virtual environment is optional but strongly recommended, in
order to avoid potential conflicts with other packages.
python
-m
venv
sklearn-env
source
sklearn-env/bin/activate
# activate
pip
install
-U
scikit-learn
In order to check your installation, you can use:
python
-m
pip
show
scikit-learn
# show scikit-learn version and location
python
-m
pip
freeze
# show all installed packages in the environment
python
-c
"import sklearn; sklearn.show_versions()"
conda
Install conda using the
conda-forge installers
(no
administrator permission required). Then run:
conda
create
-n
sklearn-env
-c
conda-forge
scikit-learn
conda
activate
sklearn-env
In order to check your installation, you can use:
conda
list
scikit-learn
# show scikit-learn version and location
conda
list
# show all installed packages in the environment
python
-c
"import sklearn; sklearn.show_versions()"
Linux
pip
Python 3 is usually installed by default on most Linux distributions. To
check if you have it installed, try:
python3
--version
pip3
--version
If you don’t have Python 3 installed, please install
python3
and
python3-pip
from your distribution’s package manager.
Now create a
virtual environment (venv)
and install scikit-learn.
Note that the virtual environment is optional but strongly recommended, in
order to avoid potential conflicts with other packages.
python3
-m
venv
sklearn-env
source
sklearn-env/bin/activate
# activate
pip3
install
-U
scikit-learn
In order to check your installation, you can use:
python3
-m
pip
show
scikit-learn
# show scikit-learn version and location
python3
-m
pip
freeze
# show all installed packages in the environment
python3
-c
"import sklearn; sklearn.show_versions()"
conda
Install conda using the
conda-forge installers
(no
administrator permission required). Then run:
conda
create
-n
sklearn-env
-c
conda-forge
scikit-learn
conda
activate
sklearn-env
In order to check your installation, you can use:
conda
list
scikit-learn
# show scikit-learn version and location
conda
list
# show all installed packages in the environment
python
-c
"import sklearn; sklearn.show_versions()"
Using an isolated environment such as pip venv or conda makes it possible to
install a specific version of scikit-learn with pip or conda and its dependencies
independently of any previously installed Python packages. In particular under Linux
it is discouraged to install pip packages alongside the packages managed by the
package manager of the distribution (apt, dnf, pacman…).
Note that you should always remember to activate the environment of your choice
prior to running any Python command whenever you start a new terminal session.
If you have not installed NumPy or SciPy yet, you can also install these using
conda or pip. When using pip, please ensure that
binary wheels
are used,
and NumPy and SciPy are not recompiled from source, which can happen when using
particular configurations of operating system and hardware (such as Linux on
a Raspberry Pi).
Scikit-learn plotting capabilities (i.e., functions starting with
plot_
and classes ending with
Display
) require Matplotlib. The examples require
Matplotlib and some examples require scikit-image, pandas, or seaborn. The
minimum version of scikit-learn dependencies are listed below along with its
purpose.
Dependency
Minimum Version
Purpose
numpy
1.22.0
build, install
scipy
1.8.0
build, install
joblib
1.2.0
install
threadpoolctl
3.1.0
install
cython
3.0.10
build
meson-python
0.16.0
build
matplotlib
3.5.0
benchmark, docs, examples, tests
scikit-image
0.19.0
docs, examples, tests
pandas
1.4.0
benchmark, docs, examples, tests
seaborn
0.9.0
docs, examples
memory_profiler
0.57.0
benchmark, docs
pytest
7.1.2
tests
pytest-cov
2.9.0
tests
ruff
0.11.7
tests
mypy
1.15
tests
pyamg
4.2.1
tests
polars
0.20.30
docs, tests
pyarrow
12.0.0
tests
sphinx
7.3.7
docs
sphinx-copybutton
0.5.2
docs
sphinx-gallery
0.17.1
docs
numpydoc
1.2.0
docs, tests
Pillow
8.4.0
docs
pooch
1.6.0
docs, examples, tests
sphinx-prompt
1.4.0
docs
sphinxext-opengraph
0.9.1
docs
plotly
5.14.0
docs, examples
sphinxcontrib-sass
0.3.4
docs
sphinx-remove-toctrees
1.0.0.post1
docs
sphinx-design
0.6.0
docs
pydata-sphinx-theme
0.15.3
docs
towncrier
24.8.0
docs
conda-lock
3.0.1
maintenance
Warning
Scikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.
Scikit-learn 0.21 supported Python 3.5—3.7.
Scikit-learn 0.22 supported Python 3.5—3.8.
Scikit-learn 0.23 required Python 3.6—3.8.
Scikit-learn 0.24 required Python 3.6—3.9.
Scikit-learn 1.0 supported Python 3.7—3.10.
Scikit-learn 1.1, 1.2 and 1.3 supported Python 3.8—3.12.
Scikit-learn 1.4 and 1.5 supported Python 3.9—3.12.
Scikit-learn 1.6 supported Python 3.9—3.13.
Scikit-learn 1.7 requires Python 3.10 or newer.
Third party distributions of scikit-learn
#
Some third-party distributions provide versions of
scikit-learn integrated with their package-management systems.
These can make installation and upgrading much easier for users since
the integration includes the ability to automatically install
dependencies (numpy, scipy) that scikit-learn requires.
The following is an incomplete list of OS and python distributions
that provide their own version of scikit-learn.
Alpine Linux
#
Alpine Linux’s package is provided through the
official repositories
as
py3-scikit-learn
for Python.
It can be installed by typing the following command:
sudo
apk
add
py3-scikit-learn
Arch Linux
#
Arch Linux’s package is provided through the
official repositories
as
python-scikit-learn
for Python.
It can be installed by typing the following command:
sudo
pacman
-S
python-scikit-learn
Debian/Ubuntu
#
The Debian/Ubuntu package is split in three different packages called
python3-sklearn
(python modules),
python3-sklearn-lib
(low-level
implementations and bindings),
python-sklearn-doc
(documentation).
Note that scikit-learn requires Python 3, hence the need to use the
python3-
suffixed package names.
Packages can be installed using
apt-get
:
sudo
apt-get
install
python3-sklearn
python3-sklearn-lib
python-sklearn-doc
Fedora
#
The Fedora package is called
python3-scikit-learn
for the python 3 version,
the only one available in Fedora.
It can be installed using
dnf
:
sudo
dnf
install
python3-scikit-learn
NetBSD
#
scikit-learn is available via
pkgsrc-wip
:
https://pkgsrc.se/math/py-scikit-learn
MacPorts for Mac OSX
#
The MacPorts package is named
py<XY>-scikits-learn
,
where
XY
denotes the Python version.
It can be installed by typing the following
command:
sudo
port
install
py312-scikit-learn
Anaconda and Enthought Deployment Manager for all supported platforms
#
Anaconda
and
Enthought Deployment Manager
both ship with scikit-learn in addition to a large set of scientific
python library for Windows, Mac OSX and Linux.
Anaconda offers scikit-learn as part of its free distribution.
Intel Extension for Scikit-learn
#
Intel maintains an optimized x86_64 package, available in PyPI (via
pip
),
and in the
main
,
conda-forge
and
intel
conda channels:
conda
install
scikit-learn-intelex
This package has an Intel optimized version of many estimators. Whenever
an alternative implementation doesn’t exist, scikit-learn implementation
is used as a fallback. Those optimized solvers come from the oneDAL
C++ library and are optimized for the x86_64 architecture, and are
optimized for multi-core Intel CPUs.
Note that those solvers are not enabled by default, please refer to the
scikit-learn-intelex
documentation for more details on usage scenarios. Direct export example:
from
sklearnex.neighbors
import
NearestNeighbors
Compatibility with the standard scikit-learn solvers is checked by running the
full scikit-learn test suite via automated continuous integration as reported
on
intel/scikit-learn-intelex
. If you observe any issue
with
scikit-learn-intelex
, please report the issue on their
issue tracker
.
WinPython for Windows
#
The
WinPython
project distributes
scikit-learn as an additional plugin.
Troubleshooting
#
If you encounter unexpected failures when installing scikit-learn, you may submit
an issue to the
issue tracker
.
Before that, please also make sure to check the following common issues.
Error caused by file path length limit on Windows
#
It can happen that pip fails to install packages when reaching the default path
size limit of Windows if Python is installed in a nested location such as the
AppData
folder structure under the user home directory, for instance:
C
:
\
Users
\
username
>
C
:
\
Users
\
username
\
AppData
\
Local
\
Microsoft
\
WindowsApps
\
python
.
exe
-
m
pip
install
scikit
-
learn
Collecting
scikit
-
learn
...
Installing
collected
packages
:
scikit
-
learn
ERROR
:
Could
not
install
packages
due
to
an
OSError
:
[
Errno
2
]
No
such
file
or
directory
:
'C:
\\
Users
\\
username
\\
AppData
\\
Local
\\
Packages
\\
PythonSoftwareFoundation.Python.3.7_qbz5n2kfra8p0
\\
LocalCache
\\
local-packages
\\
Python37
\\
site-packages
\\
sklearn
\\
datasets
\\
tests
\\
data
\\
openml
\\
292
\\
api-v1-json-data-list-data_name-australian-limit-2-data_version-1-status-deactivated.json.gz'
In this case it is possible to lift that limit in the Windows registry by
using the
regedit
tool:
Type “regedit” in the Windows start menu to launch
regedit
.
Go to the
Computer\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem
key.
Edit the value of the
LongPathsEnabled
property of that key and set
it to 1.
Reinstall scikit-learn (ignoring the previous broken installation):
pip
install
-
-exists-action
=
i
scikit-learn
previous
Index
next
User Guide
On this page
Installing the latest release
Third party distributions of scikit-learn
Alpine Linux
Arch Linux
Debian/Ubuntu
Fedora
NetBSD
MacPorts for Mac OSX
Anaconda and Enthought Deployment Manager for all supported platforms
Intel Extension for Scikit-learn
WinPython for Windows
Troubleshooting
Error caused by file path length limit on Windows
This Page
Show Source
© Copyright 2007 - 2025, scikit-learn developers (BSD License).