Set routines — NumPy v2.2 Manual
Skip to main content
Back to top
Ctrl
+
K
User Guide
API reference
Building from source
Development
Release notes
Learn
More
NEPs
Choose version
GitHub
User Guide
API reference
Building from source
Development
Release notes
Learn
NEPs
Choose version
GitHub
Section Navigation
NumPy’s module structure
Array objects
Universal functions (
ufunc
)
Routines and objects by topic
Constants
Array creation routines
Array manipulation routines
Bit-wise operations
String functionality
Datetime support functions
Data type routines
Mathematical functions with automatic domain
Floating point error handling
Exceptions and Warnings (
numpy.exceptions
)
Discrete Fourier Transform (
numpy.fft
)
Functional programming
Input and output
Indexing routines
Linear algebra (
numpy.linalg
)
Logic functions
Masked array operations
Mathematical functions
Miscellaneous routines
Polynomials
Random sampling (
numpy.random
)
Set routines
numpy.unique
numpy.unique_all
numpy.unique_counts
numpy.unique_inverse
numpy.unique_values
numpy.in1d
numpy.intersect1d
numpy.isin
numpy.setdiff1d
numpy.setxor1d
numpy.union1d
Sorting, searching, and counting
Statistics
Test support (
numpy.testing
)
Window functions
Typing (
numpy.typing
)
Packaging (
numpy.distutils
)
NumPy C-API
Array API standard compatibility
CPU/SIMD optimizations
Thread Safety
Global Configuration Options
NumPy security
Status of
numpy.distutils
and migration advice
numpy.distutils
user guide
NumPy and SWIG
NumPy reference
Routines and objects by topic
Set routines
Set routines
#
Making proper sets
#
unique
(ar[, return_index, return_inverse, ...])
Find the unique elements of an array.
unique_all
(x)
Find the unique elements of an array, and counts, inverse, and indices.
unique_counts
(x)
Find the unique elements and counts of an input array
x
.
unique_inverse
(x)
Find the unique elements of
x
and indices to reconstruct
x
.
unique_values
(x)
Returns the unique elements of an input array
x
.
Boolean operations
#
in1d
(ar1, ar2[, assume_unique, invert, kind])
Test whether each element of a 1-D array is also present in a second array.
intersect1d
(ar1, ar2[, assume_unique, ...])
Find the intersection of two arrays.
isin
(element, test_elements[, ...])
Calculates
element
in
test_elements
, broadcasting over
element
only.
setdiff1d
(ar1, ar2[, assume_unique])
Find the set difference of two arrays.
setxor1d
(ar1, ar2[, assume_unique])
Find the set exclusive-or of two arrays.
union1d
(ar1, ar2)
Find the union of two arrays.
previous
numpy.polysub
next
numpy.unique_all
On this page
Making proper sets
Boolean operations
© Copyright 2008-2024, NumPy Developers.
Created using
Sphinx
7.2.6.
Built with the
PyData Sphinx Theme
0.16.0.