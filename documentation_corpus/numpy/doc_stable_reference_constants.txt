Constants — NumPy v2.2 Manual
Skip to main content
Back to top
Ctrl
+
K
User Guide
API reference
Building from source
Development
Release notes
Learn
More
NEPs
Choose version
GitHub
User Guide
API reference
Building from source
Development
Release notes
Learn
NEPs
Choose version
GitHub
Section Navigation
NumPy’s module structure
Array objects
Universal functions (
ufunc
)
Routines and objects by topic
Constants
Array creation routines
Array manipulation routines
Bit-wise operations
String functionality
Datetime support functions
Data type routines
Mathematical functions with automatic domain
Floating point error handling
Exceptions and Warnings (
numpy.exceptions
)
Discrete Fourier Transform (
numpy.fft
)
Functional programming
Input and output
Indexing routines
Linear algebra (
numpy.linalg
)
Logic functions
Masked array operations
Mathematical functions
Miscellaneous routines
Polynomials
Random sampling (
numpy.random
)
Set routines
Sorting, searching, and counting
Statistics
Test support (
numpy.testing
)
Window functions
Typing (
numpy.typing
)
Packaging (
numpy.distutils
)
NumPy C-API
Array API standard compatibility
CPU/SIMD optimizations
Thread Safety
Global Configuration Options
NumPy security
Status of
numpy.distutils
and migration advice
numpy.distutils
user guide
NumPy and SWIG
NumPy reference
Routines and objects by topic
Constants
Constants
#
NumPy includes several constants:
numpy.
e
#
Euler’s constant, base of natural logarithms, Napier’s constant.
e
=
2.71828182845904523536028747135266249775724709369995...
See Also
exp : Exponential function
log : Natural logarithm
References
https://en.wikipedia.org/wiki/E_%28mathematical_constant%29
numpy.
euler_gamma
#
γ
=
0.5772156649015328606065120900824024310421...
References
https://en.wikipedia.org/wiki/Euler%27s_constant
numpy.
inf
#
IEEE 754 floating point representation of (positive) infinity.
Returns
y
float
A floating point representation of positive infinity.
See Also
isinf : Shows which elements are positive or negative infinity
isposinf : Shows which elements are positive infinity
isneginf : Shows which elements are negative infinity
isnan : Shows which elements are Not a Number
isfinite : Shows which elements are finite (not one of Not a Number,
positive infinity and negative infinity)
Notes
NumPy uses the IEEE Standard for Binary Floating-Point for Arithmetic
(IEEE 754). This means that Not a Number is not equivalent to infinity.
Also that positive infinity is not equivalent to negative infinity. But
infinity is equivalent to positive infinity.
Examples
>>>
import
numpy
as
np
>>>
np
.
inf
inf
>>>
np
.
array
([
1
])
/
0.
array([inf])
numpy.
nan
#
IEEE 754 floating point representation of Not a Number (NaN).
Returns
y : A floating point representation of Not a Number.
See Also
isnan : Shows which elements are Not a Number.
isfinite : Shows which elements are finite (not one of
Not a Number, positive infinity and negative infinity)
Notes
NumPy uses the IEEE Standard for Binary Floating-Point for Arithmetic
(IEEE 754). This means that Not a Number is not equivalent to infinity.
Examples
>>>
import
numpy
as
np
>>>
np
.
nan
nan
>>>
np
.
log
(
-
1
)
np.float64(nan)
>>>
np
.
log
([
-
1
,
1
,
2
])
array([       nan, 0.        , 0.69314718])
numpy.
newaxis
#
A convenient alias for None, useful for indexing arrays.
Examples
>>>
import
numpy
as
np
>>>
np
.
newaxis
is
None
True
>>>
x
=
np
.
arange
(
3
)
>>>
x
array([0, 1, 2])
>>>
x
[:,
np
.
newaxis
]
array([[0],
[1],
[2]])
>>>
x
[:,
np
.
newaxis
,
np
.
newaxis
]
array([[[0]],
[[1]],
[[2]]])
>>>
x
[:,
np
.
newaxis
]
*
x
array([[0, 0, 0],
[0, 1, 2],
[0, 2, 4]])
Outer product, same as
outer(x,
y)
:
>>>
y
=
np
.
arange
(
3
,
6
)
>>>
x
[:,
np
.
newaxis
]
*
y
array([[ 0,  0,  0],
[ 3,  4,  5],
[ 6,  8, 10]])
x[np.newaxis,
:]
is equivalent to
x[np.newaxis]
and
x[None]
:
>>>
x
[
np
.
newaxis
,
:]
.
shape
(1, 3)
>>>
x
[
np
.
newaxis
]
.
shape
(1, 3)
>>>
x
[
None
]
.
shape
(1, 3)
>>>
x
[:,
np
.
newaxis
]
.
shape
(3, 1)
numpy.
pi
#
pi
=
3.1415926535897932384626433...
References
https://en.wikipedia.org/wiki/Pi
previous
Routines and objects by topic
next
Array creation routines
On this page
e
euler_gamma
inf
nan
newaxis
pi
© Copyright 2008-2024, NumPy Developers.
Created using
Sphinx
7.2.6.
Built with the
PyData Sphinx Theme
0.16.0.