DataFrame — pandas 2.3.0 documentation
Skip to main content
Back to top
Ctrl
+
K
Site Navigation
Getting started
User Guide
API reference
Development
Release notes
GitHub
Twitter
Mastodon
Site Navigation
Getting started
User Guide
API reference
Development
Release notes
GitHub
Twitter
Mastodon
Input/output
General functions
Series
DataFrame
pandas.DataFrame
pandas.DataFrame.index
pandas.DataFrame.columns
pandas.DataFrame.dtypes
pandas.DataFrame.info
pandas.DataFrame.select_dtypes
pandas.DataFrame.values
pandas.DataFrame.axes
pandas.DataFrame.ndim
pandas.DataFrame.size
pandas.DataFrame.shape
pandas.DataFrame.memory_usage
pandas.DataFrame.empty
pandas.DataFrame.set_flags
pandas.DataFrame.astype
pandas.DataFrame.convert_dtypes
pandas.DataFrame.infer_objects
pandas.DataFrame.copy
pandas.DataFrame.bool
pandas.DataFrame.to_numpy
pandas.DataFrame.head
pandas.DataFrame.at
pandas.DataFrame.iat
pandas.DataFrame.loc
pandas.DataFrame.iloc
pandas.DataFrame.insert
pandas.DataFrame.__iter__
pandas.DataFrame.items
pandas.DataFrame.keys
pandas.DataFrame.iterrows
pandas.DataFrame.itertuples
pandas.DataFrame.pop
pandas.DataFrame.tail
pandas.DataFrame.xs
pandas.DataFrame.get
pandas.DataFrame.isin
pandas.DataFrame.where
pandas.DataFrame.mask
pandas.DataFrame.query
pandas.DataFrame.__add__
pandas.DataFrame.add
pandas.DataFrame.sub
pandas.DataFrame.mul
pandas.DataFrame.div
pandas.DataFrame.truediv
pandas.DataFrame.floordiv
pandas.DataFrame.mod
pandas.DataFrame.pow
pandas.DataFrame.dot
pandas.DataFrame.radd
pandas.DataFrame.rsub
pandas.DataFrame.rmul
pandas.DataFrame.rdiv
pandas.DataFrame.rtruediv
pandas.DataFrame.rfloordiv
pandas.DataFrame.rmod
pandas.DataFrame.rpow
pandas.DataFrame.lt
pandas.DataFrame.gt
pandas.DataFrame.le
pandas.DataFrame.ge
pandas.DataFrame.ne
pandas.DataFrame.eq
pandas.DataFrame.combine
pandas.DataFrame.combine_first
pandas.DataFrame.apply
pandas.DataFrame.map
pandas.DataFrame.applymap
pandas.DataFrame.pipe
pandas.DataFrame.agg
pandas.DataFrame.aggregate
pandas.DataFrame.transform
pandas.DataFrame.groupby
pandas.DataFrame.rolling
pandas.DataFrame.expanding
pandas.DataFrame.ewm
pandas.DataFrame.abs
pandas.DataFrame.all
pandas.DataFrame.any
pandas.DataFrame.clip
pandas.DataFrame.corr
pandas.DataFrame.corrwith
pandas.DataFrame.count
pandas.DataFrame.cov
pandas.DataFrame.cummax
pandas.DataFrame.cummin
pandas.DataFrame.cumprod
pandas.DataFrame.cumsum
pandas.DataFrame.describe
pandas.DataFrame.diff
pandas.DataFrame.eval
pandas.DataFrame.kurt
pandas.DataFrame.kurtosis
pandas.DataFrame.max
pandas.DataFrame.mean
pandas.DataFrame.median
pandas.DataFrame.min
pandas.DataFrame.mode
pandas.DataFrame.pct_change
pandas.DataFrame.prod
pandas.DataFrame.product
pandas.DataFrame.quantile
pandas.DataFrame.rank
pandas.DataFrame.round
pandas.DataFrame.sem
pandas.DataFrame.skew
pandas.DataFrame.sum
pandas.DataFrame.std
pandas.DataFrame.var
pandas.DataFrame.nunique
pandas.DataFrame.value_counts
pandas.DataFrame.add_prefix
pandas.DataFrame.add_suffix
pandas.DataFrame.align
pandas.DataFrame.at_time
pandas.DataFrame.between_time
pandas.DataFrame.drop
pandas.DataFrame.drop_duplicates
pandas.DataFrame.duplicated
pandas.DataFrame.equals
pandas.DataFrame.filter
pandas.DataFrame.first
pandas.DataFrame.head
pandas.DataFrame.idxmax
pandas.DataFrame.idxmin
pandas.DataFrame.last
pandas.DataFrame.reindex
pandas.DataFrame.reindex_like
pandas.DataFrame.rename
pandas.DataFrame.rename_axis
pandas.DataFrame.reset_index
pandas.DataFrame.sample
pandas.DataFrame.set_axis
pandas.DataFrame.set_index
pandas.DataFrame.tail
pandas.DataFrame.take
pandas.DataFrame.truncate
pandas.DataFrame.backfill
pandas.DataFrame.bfill
pandas.DataFrame.dropna
pandas.DataFrame.ffill
pandas.DataFrame.fillna
pandas.DataFrame.interpolate
pandas.DataFrame.isna
pandas.DataFrame.isnull
pandas.DataFrame.notna
pandas.DataFrame.notnull
pandas.DataFrame.pad
pandas.DataFrame.replace
pandas.DataFrame.droplevel
pandas.DataFrame.pivot
pandas.DataFrame.pivot_table
pandas.DataFrame.reorder_levels
pandas.DataFrame.sort_values
pandas.DataFrame.sort_index
pandas.DataFrame.nlargest
pandas.DataFrame.nsmallest
pandas.DataFrame.swaplevel
pandas.DataFrame.stack
pandas.DataFrame.unstack
pandas.DataFrame.swapaxes
pandas.DataFrame.melt
pandas.DataFrame.explode
pandas.DataFrame.squeeze
pandas.DataFrame.to_xarray
pandas.DataFrame.T
pandas.DataFrame.transpose
pandas.DataFrame.assign
pandas.DataFrame.compare
pandas.DataFrame.join
pandas.DataFrame.merge
pandas.DataFrame.update
pandas.DataFrame.asfreq
pandas.DataFrame.asof
pandas.DataFrame.shift
pandas.DataFrame.first_valid_index
pandas.DataFrame.last_valid_index
pandas.DataFrame.resample
pandas.DataFrame.to_period
pandas.DataFrame.to_timestamp
pandas.DataFrame.tz_convert
pandas.DataFrame.tz_localize
pandas.Flags
pandas.DataFrame.attrs
pandas.DataFrame.plot
pandas.DataFrame.plot.area
pandas.DataFrame.plot.bar
pandas.DataFrame.plot.barh
pandas.DataFrame.plot.box
pandas.DataFrame.plot.density
pandas.DataFrame.plot.hexbin
pandas.DataFrame.plot.hist
pandas.DataFrame.plot.kde
pandas.DataFrame.plot.line
pandas.DataFrame.plot.pie
pandas.DataFrame.plot.scatter
pandas.DataFrame.boxplot
pandas.DataFrame.hist
pandas.DataFrame.sparse.density
pandas.DataFrame.sparse.from_spmatrix
pandas.DataFrame.sparse.to_coo
pandas.DataFrame.sparse.to_dense
pandas.DataFrame.from_dict
pandas.DataFrame.from_records
pandas.DataFrame.to_orc
pandas.DataFrame.to_parquet
pandas.DataFrame.to_pickle
pandas.DataFrame.to_csv
pandas.DataFrame.to_hdf
pandas.DataFrame.to_sql
pandas.DataFrame.to_dict
pandas.DataFrame.to_excel
pandas.DataFrame.to_json
pandas.DataFrame.to_html
pandas.DataFrame.to_feather
pandas.DataFrame.to_latex
pandas.DataFrame.to_stata
pandas.DataFrame.to_gbq
pandas.DataFrame.to_records
pandas.DataFrame.to_string
pandas.DataFrame.to_clipboard
pandas.DataFrame.to_markdown
pandas.DataFrame.style
pandas.DataFrame.__dataframe__
pandas arrays, scalars, and data types
Index objects
Date offsets
Window
GroupBy
Resampling
Style
Plotting
Options and settings
Extensions
Testing
Missing values
API reference
DataFrame
DataFrame
#
Constructor
#
DataFrame
([data,Â index,Â columns,Â dtype,Â copy])
Two-dimensional, size-mutable, potentially heterogeneous tabular data.
Attributes and underlying data
#
Axes
DataFrame.index
The index (row labels) of the DataFrame.
DataFrame.columns
The column labels of the DataFrame.
DataFrame.dtypes
Return the dtypes in the DataFrame.
DataFrame.info
([verbose,Â buf,Â max_cols,Â ...])
Print a concise summary of a DataFrame.
DataFrame.select_dtypes
([include,Â exclude])
Return a subset of the DataFrame's columns based on the column dtypes.
DataFrame.values
Return a Numpy representation of the DataFrame.
DataFrame.axes
Return a list representing the axes of the DataFrame.
DataFrame.ndim
Return an int representing the number of axes / array dimensions.
DataFrame.size
Return an int representing the number of elements in this object.
DataFrame.shape
Return a tuple representing the dimensionality of the DataFrame.
DataFrame.memory_usage
([index,Â deep])
Return the memory usage of each column in bytes.
DataFrame.empty
Indicator whether Series/DataFrame is empty.
DataFrame.set_flags
(*[,Â copy,Â ...])
Return a new object with updated flags.
Conversion
#
DataFrame.astype
(dtype[,Â copy,Â errors])
Cast a pandas object to a specified dtype
dtype
.
DataFrame.convert_dtypes
([infer_objects,Â ...])
Convert columns to the best possible dtypes using dtypes supporting
pd.NA
.
DataFrame.infer_objects
([copy])
Attempt to infer better dtypes for object columns.
DataFrame.copy
([deep])
Make a copy of this object's indices and data.
DataFrame.bool
()
(DEPRECATED) Return the bool of a single element Series or DataFrame.
DataFrame.to_numpy
([dtype,Â copy,Â na_value])
Convert the DataFrame to a NumPy array.
Indexing, iteration
#
DataFrame.head
([n])
Return the first
n
rows.
DataFrame.at
Access a single value for a row/column label pair.
DataFrame.iat
Access a single value for a row/column pair by integer position.
DataFrame.loc
Access a group of rows and columns by label(s) or a boolean array.
DataFrame.iloc
(DEPRECATED) Purely integer-location based indexing for selection by position.
DataFrame.insert
(loc,Â column,Â value[,Â ...])
Insert column into DataFrame at specified location.
DataFrame.__iter__
()
Iterate over info axis.
DataFrame.items
()
Iterate over (column name, Series) pairs.
DataFrame.keys
()
Get the 'info axis' (see Indexing for more).
DataFrame.iterrows
()
Iterate over DataFrame rows as (index, Series) pairs.
DataFrame.itertuples
([index,Â name])
Iterate over DataFrame rows as namedtuples.
DataFrame.pop
(item)
Return item and drop from frame.
DataFrame.tail
([n])
Return the last
n
rows.
DataFrame.xs
(key[,Â axis,Â level,Â drop_level])
Return cross-section from the Series/DataFrame.
DataFrame.get
(key[,Â default])
Get item from object for given key (ex: DataFrame column).
DataFrame.isin
(values)
Whether each element in the DataFrame is contained in values.
DataFrame.where
(cond[,Â other,Â inplace,Â ...])
Replace values where the condition is False.
DataFrame.mask
(cond[,Â other,Â inplace,Â axis,Â ...])
Replace values where the condition is True.
DataFrame.query
(expr,Â *[,Â inplace])
Query the columns of a DataFrame with a boolean expression.
For more information on
.at
,
.iat
,
.loc
, and
.iloc
,  see the
indexing documentation
.
Binary operator functions
#
DataFrame.__add__
(other)
Get Addition of DataFrame and other, column-wise.
DataFrame.add
(other[,Â axis,Â level,Â fill_value])
Get Addition of dataframe and other, element-wise (binary operator
add
).
DataFrame.sub
(other[,Â axis,Â level,Â fill_value])
Get Subtraction of dataframe and other, element-wise (binary operator
sub
).
DataFrame.mul
(other[,Â axis,Â level,Â fill_value])
Get Multiplication of dataframe and other, element-wise (binary operator
mul
).
DataFrame.div
(other[,Â axis,Â level,Â fill_value])
Get Floating division of dataframe and other, element-wise (binary operator
truediv
).
DataFrame.truediv
(other[,Â axis,Â level,Â ...])
Get Floating division of dataframe and other, element-wise (binary operator
truediv
).
DataFrame.floordiv
(other[,Â axis,Â level,Â ...])
Get Integer division of dataframe and other, element-wise (binary operator
floordiv
).
DataFrame.mod
(other[,Â axis,Â level,Â fill_value])
Get Modulo of dataframe and other, element-wise (binary operator
mod
).
DataFrame.pow
(other[,Â axis,Â level,Â fill_value])
Get Exponential power of dataframe and other, element-wise (binary operator
pow
).
DataFrame.dot
(other)
Compute the matrix multiplication between the DataFrame and other.
DataFrame.radd
(other[,Â axis,Â level,Â fill_value])
Get Addition of dataframe and other, element-wise (binary operator
radd
).
DataFrame.rsub
(other[,Â axis,Â level,Â fill_value])
Get Subtraction of dataframe and other, element-wise (binary operator
rsub
).
DataFrame.rmul
(other[,Â axis,Â level,Â fill_value])
Get Multiplication of dataframe and other, element-wise (binary operator
rmul
).
DataFrame.rdiv
(other[,Â axis,Â level,Â fill_value])
Get Floating division of dataframe and other, element-wise (binary operator
rtruediv
).
DataFrame.rtruediv
(other[,Â axis,Â level,Â ...])
Get Floating division of dataframe and other, element-wise (binary operator
rtruediv
).
DataFrame.rfloordiv
(other[,Â axis,Â level,Â ...])
Get Integer division of dataframe and other, element-wise (binary operator
rfloordiv
).
DataFrame.rmod
(other[,Â axis,Â level,Â fill_value])
Get Modulo of dataframe and other, element-wise (binary operator
rmod
).
DataFrame.rpow
(other[,Â axis,Â level,Â fill_value])
Get Exponential power of dataframe and other, element-wise (binary operator
rpow
).
DataFrame.lt
(other[,Â axis,Â level])
Get Less than of dataframe and other, element-wise (binary operator
lt
).
DataFrame.gt
(other[,Â axis,Â level])
Get Greater than of dataframe and other, element-wise (binary operator
gt
).
DataFrame.le
(other[,Â axis,Â level])
Get Less than or equal to of dataframe and other, element-wise (binary operator
le
).
DataFrame.ge
(other[,Â axis,Â level])
Get Greater than or equal to of dataframe and other, element-wise (binary operator
ge
).
DataFrame.ne
(other[,Â axis,Â level])
Get Not equal to of dataframe and other, element-wise (binary operator
ne
).
DataFrame.eq
(other[,Â axis,Â level])
Get Equal to of dataframe and other, element-wise (binary operator
eq
).
DataFrame.combine
(other,Â func[,Â fill_value,Â ...])
Perform column-wise combine with another DataFrame.
DataFrame.combine_first
(other)
Update null elements with value in the same location in
other
.
Function application, GroupBy & window
#
DataFrame.apply
(func[,Â axis,Â raw,Â ...])
Apply a function along an axis of the DataFrame.
DataFrame.map
(func[,Â na_action])
Apply a function to a Dataframe elementwise.
DataFrame.applymap
(func[,Â na_action])
(DEPRECATED) Apply a function to a Dataframe elementwise.
DataFrame.pipe
(func,Â *args,Â **kwargs)
Apply chainable functions that expect Series or DataFrames.
DataFrame.agg
([func,Â axis])
Aggregate using one or more operations over the specified axis.
DataFrame.aggregate
([func,Â axis])
Aggregate using one or more operations over the specified axis.
DataFrame.transform
(func[,Â axis])
Call
func
on self producing a DataFrame with the same axis shape as self.
DataFrame.groupby
([by,Â axis,Â level,Â ...])
Group DataFrame using a mapper or by a Series of columns.
DataFrame.rolling
(window[,Â min_periods,Â ...])
Provide rolling window calculations.
DataFrame.expanding
([min_periods,Â axis,Â method])
Provide expanding window calculations.
DataFrame.ewm
([com,Â span,Â halflife,Â alpha,Â ...])
Provide exponentially weighted (EW) calculations.
Computations / descriptive stats
#
DataFrame.abs
()
Return a Series/DataFrame with absolute numeric value of each element.
DataFrame.all
([axis,Â bool_only,Â skipna])
Return whether all elements are True, potentially over an axis.
DataFrame.any
(*[,Â axis,Â bool_only,Â skipna])
Return whether any element is True, potentially over an axis.
DataFrame.clip
([lower,Â upper,Â axis,Â inplace])
Trim values at input threshold(s).
DataFrame.corr
([method,Â min_periods,Â ...])
Compute pairwise correlation of columns, excluding NA/null values.
DataFrame.corrwith
(other[,Â axis,Â drop,Â ...])
Compute pairwise correlation.
DataFrame.count
([axis,Â numeric_only])
Count non-NA cells for each column or row.
DataFrame.cov
([min_periods,Â ddof,Â numeric_only])
Compute pairwise covariance of columns, excluding NA/null values.
DataFrame.cummax
([axis,Â skipna])
Return cumulative maximum over a DataFrame or Series axis.
DataFrame.cummin
([axis,Â skipna])
Return cumulative minimum over a DataFrame or Series axis.
DataFrame.cumprod
([axis,Â skipna])
Return cumulative product over a DataFrame or Series axis.
DataFrame.cumsum
([axis,Â skipna])
Return cumulative sum over a DataFrame or Series axis.
DataFrame.describe
([percentiles,Â include,Â ...])
Generate descriptive statistics.
DataFrame.diff
([periods,Â axis])
First discrete difference of element.
DataFrame.eval
(expr,Â *[,Â inplace])
Evaluate a string describing operations on DataFrame columns.
DataFrame.kurt
([axis,Â skipna,Â numeric_only])
Return unbiased kurtosis over requested axis.
DataFrame.kurtosis
([axis,Â skipna,Â numeric_only])
Return unbiased kurtosis over requested axis.
DataFrame.max
([axis,Â skipna,Â numeric_only])
Return the maximum of the values over the requested axis.
DataFrame.mean
([axis,Â skipna,Â numeric_only])
Return the mean of the values over the requested axis.
DataFrame.median
([axis,Â skipna,Â numeric_only])
Return the median of the values over the requested axis.
DataFrame.min
([axis,Â skipna,Â numeric_only])
Return the minimum of the values over the requested axis.
DataFrame.mode
([axis,Â numeric_only,Â dropna])
Get the mode(s) of each element along the selected axis.
DataFrame.pct_change
([periods,Â fill_method,Â ...])
Fractional change between the current and a prior element.
DataFrame.prod
([axis,Â skipna,Â numeric_only,Â ...])
Return the product of the values over the requested axis.
DataFrame.product
([axis,Â skipna,Â ...])
Return the product of the values over the requested axis.
DataFrame.quantile
([q,Â axis,Â numeric_only,Â ...])
Return values at the given quantile over requested axis.
DataFrame.rank
([axis,Â method,Â numeric_only,Â ...])
Compute numerical data ranks (1 through n) along axis.
DataFrame.round
([decimals])
Round a DataFrame to a variable number of decimal places.
DataFrame.sem
([axis,Â skipna,Â ddof,Â numeric_only])
Return unbiased standard error of the mean over requested axis.
DataFrame.skew
([axis,Â skipna,Â numeric_only])
Return unbiased skew over requested axis.
DataFrame.sum
([axis,Â skipna,Â numeric_only,Â ...])
Return the sum of the values over the requested axis.
DataFrame.std
([axis,Â skipna,Â ddof,Â numeric_only])
Return sample standard deviation over requested axis.
DataFrame.var
([axis,Â skipna,Â ddof,Â numeric_only])
Return unbiased variance over requested axis.
DataFrame.nunique
([axis,Â dropna])
Count number of distinct elements in specified axis.
DataFrame.value_counts
([subset,Â normalize,Â ...])
Return a Series containing the frequency of each distinct row in the Dataframe.
Reindexing / selection / label manipulation
#
DataFrame.add_prefix
(prefix[,Â axis])
Prefix labels with string
prefix
.
DataFrame.add_suffix
(suffix[,Â axis])
Suffix labels with string
suffix
.
DataFrame.align
(other[,Â join,Â axis,Â level,Â ...])
Align two objects on their axes with the specified join method.
DataFrame.at_time
(time[,Â asof,Â axis])
Select values at particular time of day (e.g., 9:30AM).
DataFrame.between_time
(start_time,Â end_time)
Select values between particular times of the day (e.g., 9:00-9:30 AM).
DataFrame.drop
([labels,Â axis,Â index,Â ...])
Drop specified labels from rows or columns.
DataFrame.drop_duplicates
([subset,Â keep,Â ...])
Return DataFrame with duplicate rows removed.
DataFrame.duplicated
([subset,Â keep])
Return boolean Series denoting duplicate rows.
DataFrame.equals
(other)
Test whether two objects contain the same elements.
DataFrame.filter
([items,Â like,Â regex,Â axis])
Subset the dataframe rows or columns according to the specified index labels.
DataFrame.first
(offset)
(DEPRECATED) Select initial periods of time series data based on a date offset.
DataFrame.head
([n])
Return the first
n
rows.
DataFrame.idxmax
([axis,Â skipna,Â numeric_only])
Return index of first occurrence of maximum over requested axis.
DataFrame.idxmin
([axis,Â skipna,Â numeric_only])
Return index of first occurrence of minimum over requested axis.
DataFrame.last
(offset)
(DEPRECATED) Select final periods of time series data based on a date offset.
DataFrame.reindex
([labels,Â index,Â columns,Â ...])
Conform DataFrame to new index with optional filling logic.
DataFrame.reindex_like
(other[,Â method,Â ...])
Return an object with matching indices as other object.
DataFrame.rename
([mapper,Â index,Â columns,Â ...])
Rename columns or index labels.
DataFrame.rename_axis
([mapper,Â index,Â ...])
Set the name of the axis for the index or columns.
DataFrame.reset_index
([level,Â drop,Â ...])
Reset the index, or a level of it.
DataFrame.sample
([n,Â frac,Â replace,Â ...])
Return a random sample of items from an axis of object.
DataFrame.set_axis
(labels,Â *[,Â axis,Â copy])
Assign desired index to given axis.
DataFrame.set_index
(keys,Â *[,Â drop,Â append,Â ...])
Set the DataFrame index using existing columns.
DataFrame.tail
([n])
Return the last
n
rows.
DataFrame.take
(indices[,Â axis])
Return the elements in the given
positional
indices along an axis.
DataFrame.truncate
([before,Â after,Â axis,Â copy])
Truncate a Series or DataFrame before and after some index value.
Missing data handling
#
DataFrame.backfill
(*[,Â axis,Â inplace,Â ...])
(DEPRECATED) Fill NA/NaN values by using the next valid observation to fill the gap.
DataFrame.bfill
(*[,Â axis,Â inplace,Â limit,Â ...])
Fill NA/NaN values by using the next valid observation to fill the gap.
DataFrame.dropna
(*[,Â axis,Â how,Â thresh,Â ...])
Remove missing values.
DataFrame.ffill
(*[,Â axis,Â inplace,Â limit,Â ...])
Fill NA/NaN values by propagating the last valid observation to next valid.
DataFrame.fillna
([value,Â method,Â axis,Â ...])
Fill NA/NaN values using the specified method.
DataFrame.interpolate
([method,Â axis,Â limit,Â ...])
Fill NaN values using an interpolation method.
DataFrame.isna
()
Detect missing values.
DataFrame.isnull
()
DataFrame.isnull is an alias for DataFrame.isna.
DataFrame.notna
()
Detect existing (non-missing) values.
DataFrame.notnull
()
DataFrame.notnull is an alias for DataFrame.notna.
DataFrame.pad
(*[,Â axis,Â inplace,Â limit,Â ...])
(DEPRECATED) Fill NA/NaN values by propagating the last valid observation to next valid.
DataFrame.replace
([to_replace,Â value,Â ...])
Replace values given in
to_replace
with
value
.
Reshaping, sorting, transposing
#
DataFrame.droplevel
(level[,Â axis])
Return Series/DataFrame with requested index / column level(s) removed.
DataFrame.pivot
(*,Â columns[,Â index,Â values])
Return reshaped DataFrame organized by given index / column values.
DataFrame.pivot_table
([values,Â index,Â ...])
Create a spreadsheet-style pivot table as a DataFrame.
DataFrame.reorder_levels
(order[,Â axis])
Rearrange index levels using input order.
DataFrame.sort_values
(by,Â *[,Â axis,Â ...])
Sort by the values along either axis.
DataFrame.sort_index
(*[,Â axis,Â level,Â ...])
Sort object by labels (along an axis).
DataFrame.nlargest
(n,Â columns[,Â keep])
Return the first
n
rows ordered by
columns
in descending order.
DataFrame.nsmallest
(n,Â columns[,Â keep])
Return the first
n
rows ordered by
columns
in ascending order.
DataFrame.swaplevel
([i,Â j,Â axis])
Swap levels i and j in a
MultiIndex
.
DataFrame.stack
([level,Â dropna,Â sort,Â ...])
Stack the prescribed level(s) from columns to index.
DataFrame.unstack
([level,Â fill_value,Â sort])
Pivot a level of the (necessarily hierarchical) index labels.
DataFrame.swapaxes
(axis1,Â axis2[,Â copy])
(DEPRECATED) Interchange axes and swap values axes appropriately.
DataFrame.melt
([id_vars,Â value_vars,Â ...])
Unpivot a DataFrame from wide to long format, optionally leaving identifiers set.
DataFrame.explode
(column[,Â ignore_index])
Transform each element of a list-like to a row, replicating index values.
DataFrame.squeeze
([axis])
Squeeze 1 dimensional axis objects into scalars.
DataFrame.to_xarray
()
Return an xarray object from the pandas object.
DataFrame.T
The transpose of the DataFrame.
DataFrame.transpose
(*args[,Â copy])
Transpose index and columns.
Combining / comparing / joining / merging
#
DataFrame.assign
(**kwargs)
Assign new columns to a DataFrame.
DataFrame.compare
(other[,Â align_axis,Â ...])
Compare to another DataFrame and show the differences.
DataFrame.join
(other[,Â on,Â how,Â lsuffix,Â ...])
Join columns of another DataFrame.
DataFrame.merge
(right[,Â how,Â on,Â left_on,Â ...])
Merge DataFrame or named Series objects with a database-style join.
DataFrame.update
(other[,Â join,Â overwrite,Â ...])
Modify in place using non-NA values from another DataFrame.
Time Series-related
#
DataFrame.asfreq
(freq[,Â method,Â how,Â ...])
Convert time series to specified frequency.
DataFrame.asof
(where[,Â subset])
Return the last row(s) without any NaNs before
where
.
DataFrame.shift
([periods,Â freq,Â axis,Â ...])
Shift index by desired number of periods with an optional time
freq
.
DataFrame.first_valid_index
()
Return index for first non-NA value or None, if no non-NA value is found.
DataFrame.last_valid_index
()
Return index for last non-NA value or None, if no non-NA value is found.
DataFrame.resample
(rule[,Â axis,Â closed,Â ...])
Resample time-series data.
DataFrame.to_period
([freq,Â axis,Â copy])
Convert DataFrame from DatetimeIndex to PeriodIndex.
DataFrame.to_timestamp
([freq,Â how,Â axis,Â copy])
Cast to DatetimeIndex of timestamps, at
beginning
of period.
DataFrame.tz_convert
(tz[,Â axis,Â level,Â copy])
Convert tz-aware axis to target time zone.
DataFrame.tz_localize
(tz[,Â axis,Â level,Â ...])
Localize tz-naive index of a Series or DataFrame to target time zone.
Flags
#
Flags refer to attributes of the pandas object. Properties of the dataset (like
the date is was recorded, the URL it was accessed from, etc.) should be stored
in
DataFrame.attrs
.
Flags
(obj,Â *,Â allows_duplicate_labels)
Flags that apply to pandas objects.
Metadata
#
DataFrame.attrs
is a dictionary for storing global metadata for this DataFrame.
Warning
DataFrame.attrs
is considered experimental and may change without warning.
DataFrame.attrs
Dictionary of global attributes of this dataset.
Plotting
#
DataFrame.plot
is both a callable method and a namespace attribute for
specific plotting methods of the form
DataFrame.plot.<kind>
.
DataFrame.plot
([x,Â y,Â kind,Â ax,Â ....])
DataFrame plotting accessor and method
DataFrame.plot.area
([x,Â y,Â stacked])
Draw a stacked area plot.
DataFrame.plot.bar
([x,Â y])
Vertical bar plot.
DataFrame.plot.barh
([x,Â y])
Make a horizontal bar plot.
DataFrame.plot.box
([by])
Make a box plot of the DataFrame columns.
DataFrame.plot.density
([bw_method,Â ind])
Generate Kernel Density Estimate plot using Gaussian kernels.
DataFrame.plot.hexbin
(x,Â y[,Â C,Â ...])
Generate a hexagonal binning plot.
DataFrame.plot.hist
([by,Â bins])
Draw one histogram of the DataFrame's columns.
DataFrame.plot.kde
([bw_method,Â ind])
Generate Kernel Density Estimate plot using Gaussian kernels.
DataFrame.plot.line
([x,Â y])
Plot Series or DataFrame as lines.
DataFrame.plot.pie
(**kwargs)
Generate a pie plot.
DataFrame.plot.scatter
(x,Â y[,Â s,Â c])
Create a scatter plot with varying marker point size and color.
DataFrame.boxplot
([column,Â by,Â ax,Â ...])
Make a box plot from DataFrame columns.
DataFrame.hist
([column,Â by,Â grid,Â ...])
Make a histogram of the DataFrame's columns.
Sparse accessor
#
Sparse-dtype specific methods and attributes are provided under the
DataFrame.sparse
accessor.
DataFrame.sparse.density
Ratio of non-sparse points to total (dense) data points.
DataFrame.sparse.from_spmatrix
(data[,Â ...])
Create a new DataFrame from a scipy sparse matrix.
DataFrame.sparse.to_coo
()
Return the contents of the frame as a sparse SciPy COO matrix.
DataFrame.sparse.to_dense
()
Convert a DataFrame with sparse values to dense.
Serialization / IO / conversion
#
DataFrame.from_dict
(data[,Â orient,Â dtype,Â ...])
Construct DataFrame from dict of array-like or dicts.
DataFrame.from_records
(data[,Â index,Â ...])
Convert structured or record ndarray to DataFrame.
DataFrame.to_orc
([path,Â engine,Â index,Â ...])
Write a DataFrame to the ORC format.
DataFrame.to_parquet
([path,Â engine,Â ...])
Write a DataFrame to the binary parquet format.
DataFrame.to_pickle
(path,Â *[,Â compression,Â ...])
Pickle (serialize) object to file.
DataFrame.to_csv
([path_or_buf,Â sep,Â na_rep,Â ...])
Write object to a comma-separated values (csv) file.
DataFrame.to_hdf
(path_or_buf,Â *,Â key[,Â ...])
Write the contained data to an HDF5 file using HDFStore.
DataFrame.to_sql
(name,Â con,Â *[,Â schema,Â ...])
Write records stored in a DataFrame to a SQL database.
DataFrame.to_dict
([orient,Â into,Â index])
Convert the DataFrame to a dictionary.
DataFrame.to_excel
(excel_writer,Â *[,Â ...])
Write object to an Excel sheet.
DataFrame.to_json
([path_or_buf,Â orient,Â ...])
Convert the object to a JSON string.
DataFrame.to_html
([buf,Â columns,Â col_space,Â ...])
Render a DataFrame as an HTML table.
DataFrame.to_feather
(path,Â **kwargs)
Write a DataFrame to the binary Feather format.
DataFrame.to_latex
([buf,Â columns,Â header,Â ...])
Render object to a LaTeX tabular, longtable, or nested table.
DataFrame.to_stata
(path,Â *[,Â convert_dates,Â ...])
Export DataFrame object to Stata dta format.
DataFrame.to_gbq
(destination_table,Â *[,Â ...])
(DEPRECATED) Write a DataFrame to a Google BigQuery table.
DataFrame.to_records
([index,Â column_dtypes,Â ...])
Convert DataFrame to a NumPy record array.
DataFrame.to_string
([buf,Â columns,Â ...])
Render a DataFrame to a console-friendly tabular output.
DataFrame.to_clipboard
(*[,Â excel,Â sep])
Copy object to the system clipboard.
DataFrame.to_markdown
([buf,Â mode,Â index,Â ...])
Print DataFrame in Markdown-friendly format.
DataFrame.style
Returns a Styler object.
DataFrame.__dataframe__
([nan_as_null,Â ...])
Return the dataframe interchange object implementing the interchange protocol.
previous
pandas.Series.to_markdown
next
pandas.DataFrame
On this page
Constructor
Attributes and underlying data
Conversion
Indexing, iteration
Binary operator functions
Function application, GroupBy & window
Computations / descriptive stats
Reindexing / selection / label manipulation
Missing data handling
Reshaping, sorting, transposing
Combining / comparing / joining / merging
Time Series-related
Flags
Metadata
Plotting
Sparse accessor
Serialization / IO / conversion
Show Source
&copy 2025, pandas via
NumFOCUS, Inc.
Hosted by
OVHcloud
.
Created using
Sphinx
8.1.3.
Built with the
PyData Sphinx Theme
0.14.4.