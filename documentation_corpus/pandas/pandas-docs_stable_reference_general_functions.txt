General functions — pandas 2.3.0 documentation
Skip to main content
Back to top
Ctrl
+
K
Site Navigation
Getting started
User Guide
API reference
Development
Release notes
GitHub
Twitter
Mastodon
Site Navigation
Getting started
User Guide
API reference
Development
Release notes
GitHub
Twitter
Mastodon
Input/output
General functions
pandas.melt
pandas.pivot
pandas.pivot_table
pandas.crosstab
pandas.cut
pandas.qcut
pandas.merge
pandas.merge_ordered
pandas.merge_asof
pandas.concat
pandas.get_dummies
pandas.from_dummies
pandas.factorize
pandas.unique
pandas.lreshape
pandas.wide_to_long
pandas.isna
pandas.isnull
pandas.notna
pandas.notnull
pandas.to_numeric
pandas.to_datetime
pandas.to_timedelta
pandas.date_range
pandas.bdate_range
pandas.period_range
pandas.timedelta_range
pandas.infer_freq
pandas.interval_range
pandas.eval
pandas.tseries.api.guess_datetime_format
pandas.util.hash_array
pandas.util.hash_pandas_object
pandas.api.interchange.from_dataframe
Series
DataFrame
pandas arrays, scalars, and data types
Index objects
Date offsets
Window
GroupBy
Resampling
Style
Plotting
Options and settings
Extensions
Testing
Missing values
API reference
General functions
General functions
#
Data manipulations
#
melt
(frame[,Â id_vars,Â value_vars,Â var_name,Â ...])
Unpivot a DataFrame from wide to long format, optionally leaving identifiers set.
pivot
(data,Â *,Â columns[,Â index,Â values])
Return reshaped DataFrame organized by given index / column values.
pivot_table
(data[,Â values,Â index,Â columns,Â ...])
Create a spreadsheet-style pivot table as a DataFrame.
crosstab
(index,Â columns[,Â values,Â rownames,Â ...])
Compute a simple cross tabulation of two (or more) factors.
cut
(x,Â bins[,Â right,Â labels,Â retbins,Â ...])
Bin values into discrete intervals.
qcut
(x,Â q[,Â labels,Â retbins,Â precision,Â ...])
Quantile-based discretization function.
merge
(left,Â right[,Â how,Â on,Â left_on,Â ...])
Merge DataFrame or named Series objects with a database-style join.
merge_ordered
(left,Â right[,Â on,Â left_on,Â ...])
Perform a merge for ordered data with optional filling/interpolation.
merge_asof
(left,Â right[,Â on,Â left_on,Â ...])
Perform a merge by key distance.
concat
(objs,Â *[,Â axis,Â join,Â ignore_index,Â ...])
Concatenate pandas objects along a particular axis.
get_dummies
(data[,Â prefix,Â prefix_sep,Â ...])
Convert categorical variable into dummy/indicator variables.
from_dummies
(data[,Â sep,Â default_category])
Create a categorical
DataFrame
from a
DataFrame
of dummy variables.
factorize
(values[,Â sort,Â use_na_sentinel,Â ...])
Encode the object as an enumerated type or categorical variable.
unique
(values)
Return unique values based on a hash table.
lreshape
(data,Â groups[,Â dropna])
Reshape wide-format data to long.
wide_to_long
(df,Â stubnames,Â i,Â j[,Â sep,Â suffix])
Unpivot a DataFrame from wide to long format.
Top-level missing data
#
isna
(obj)
Detect missing values for an array-like object.
isnull
(obj)
Detect missing values for an array-like object.
notna
(obj)
Detect non-missing values for an array-like object.
notnull
(obj)
Detect non-missing values for an array-like object.
Top-level dealing with numeric data
#
to_numeric
(arg[,Â errors,Â downcast,Â ...])
Convert argument to a numeric type.
Top-level dealing with datetimelike data
#
to_datetime
(arg[,Â errors,Â dayfirst,Â ...])
Convert argument to datetime.
to_timedelta
(arg[,Â unit,Â errors])
Convert argument to timedelta.
date_range
([start,Â end,Â periods,Â freq,Â tz,Â ...])
Return a fixed frequency DatetimeIndex.
bdate_range
([start,Â end,Â periods,Â freq,Â tz,Â ...])
Return a fixed frequency DatetimeIndex with business day as the default.
period_range
([start,Â end,Â periods,Â freq,Â name])
Return a fixed frequency PeriodIndex.
timedelta_range
([start,Â end,Â periods,Â freq,Â ...])
Return a fixed frequency TimedeltaIndex with day as the default.
infer_freq
(index)
Infer the most likely frequency given the input index.
Top-level dealing with Interval data
#
interval_range
([start,Â end,Â periods,Â freq,Â ...])
Return a fixed frequency IntervalIndex.
Top-level evaluation
#
eval
(expr[,Â parser,Â engine,Â local_dict,Â ...])
Evaluate a Python expression as a string using various backends.
Datetime formats
#
tseries.api.guess_datetime_format
(dt_str[,Â ...])
Guess the datetime format of a given datetime string.
Hashing
#
util.hash_array
(vals[,Â encoding,Â hash_key,Â ...])
Given a 1d array, return an array of deterministic integers.
util.hash_pandas_object
(obj[,Â index,Â ...])
Return a data hash of the Index/Series/DataFrame.
Importing from other DataFrame libraries
#
api.interchange.from_dataframe
(df[,Â allow_copy])
Build a
pd.DataFrame
from any DataFrame supporting the interchange protocol.
previous
pandas.io.stata.StataWriter.write_file
next
pandas.melt
On this page
Data manipulations
Top-level missing data
Top-level dealing with numeric data
Top-level dealing with datetimelike data
Top-level dealing with Interval data
Top-level evaluation
Datetime formats
Hashing
Importing from other DataFrame libraries
Show Source
&copy 2025, pandas via
NumFOCUS, Inc.
Hosted by
OVHcloud
.
Created using
Sphinx
8.1.3.
Built with the
PyData Sphinx Theme
0.14.4.