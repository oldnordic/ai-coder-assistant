=== MAIN PAGE ===
FirstSpirit Online Documentation - Welcome to the FirstSpirit Online Documentation
Overview
Templates (basics)
Template development
Plug-In Development
Enhanced JSON support
Advanced topics
Tutorials
Documentation for Administrators
Documentation “Content Experience Tools”
Documentation FirstSpirit SiteArchitect
Documentation „FirstSpirit Launcher JRE“
Documentation „Installation Instructions“
Isolated Mode Guide
Documentation “External Synchronization”
Online Documentation
Sprache / Language
Deutsch / German
Englisch / English
Start page
/
Overview
Welcome to the FirstSpirit Developer Documentation
For which users is this documentation intended?
This documentation deals with template development and plug-in development in FirstSpirit. By linking different sub-areas of the template development and by the sub-division into two difficulty levels for beginners (see
Basic principles of template development
) and for advanced users (see
Template development
) this documentation provides clearly structured information and should therefore make familiarisation with the template syntax of FirstSpirit easier.
Sub-areas of the online documentation
This online documentation is divided into the following main sections:
Template development
All important aspects for the development of a FirstSpirit project in the Template Store can be read up in this section. The section is divided into the relevant sub-aspects of template development. These include:
Forms
for the definition of input components.
Rules
for influencing specific elements or characteristic of a form
Snippets
for influencing the display of objects (“teasers”)
Template syntax
divided into instructions, expressions, data types and functions.
Variables
for evaluation of contents of different areas.
Debugging
providing information about finding and fixing bugs in FirstSpirit projects.
ContentCreator
provides information about functional scope, requirements and restrictions of ContentCreator. For information about how to implement EasyEdit / InlineEdit / LiveEdit please refer to Chapter
Content Highlighting and EasyEdit
, for information about developing using JavaScript API please refer to Chapter
JavaScript API
.
Scripting
for automation of control sequences.
FirstSpirit API
as a public interface of FirstSpirit.
Security
with notes about security aspects for project and template development.
Templates (basic principles)
The topics used in most FirstSpirit projects are dealt with in this section.
Among other things there is a
step by step introduction
to the development of a FirstSpirit project. From the initial creation of a new project to the creation of page and section templates through to use of databases; simple examples are used to explain working with FirstSpirit.
ContentCreator
Requirements
,
functions
and
restrictions
for using the editing environment ContentCreator can be read up in this section.
In addition, topics that affect template development for ContentCreator will be covered:
Template development
Primarily to simplify the editorial work in the preview (EasyEdit / InlineEdit / LiveEdit).
Customization
The interface of ContentCreator can be customized to meet the requirements of the respective project.
JavaScript-API
(
WE_API
)
Enables interaction with the user interface and other ContentCreator functions via JavaScript, e.g. from documents in the preview.
Plugins
Custom extensions (modules) that extend the functionality of ContentCreator.
Advanced topics
Over-all aspects of the functionality of FirstSpirit are explained in this section.
Generation
Server-side release
Exif data
Remote access
Document groups
Tracking changes
Input assistance
(code completion)
are illustrated here. Further subjects will be added successively.
Tutorials
This section provides
exercises
for developing templates.
And now, enjoy working with FirstSpirit!
FirstSpirit is not a universal “out-of-the-box” product, but is software which is constantly being developed. New functions are continuously being integrated and customer ideas are realised. The documentation can only satisfy this constant updating process to a limited extent. It is therefore possible that a figure in this document differs from the current view in FirstSpirit due to slight time delays. Do not let it confuse you and follow the instructions as usual.
Disclaimer
This documentation is provided for information purposes only. Crownpeak may change the contents hereof without notice. This documentation is not warranted to be error-free, nor subject to any other warranties or conditions, whether expressed orally or implied in law, including implied warranties and conditions of merchantability or fitness for a particular purpose. Crownpeak specifically disclaims any liability with respect to this documentation and no contractual obligations are formed either directly or indirectly by this documentation. The technologies, functionality, services, and processes described herein are subject to change without notice.
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
DXP-Documentation
English
Deutsch
Documentation
Digital Experience Platform
Products
Crownpeak CMS (FirstSpirit)
The Crownpeak CMS (FirstSpirit) helps you engage customers and accelerates time to revenue with personalized, content rich digital experiences anytime, anywhere.
Getting Started with FirstSpirit
FirstSpirit ContentCreator
FirstSpirit Developer Documentation
FirstSpirit Documentation
Fredhopper (FHR)
Fredhopper is a powerful on-site search and advanced visual merchandising solution with AI support, campaign builder, and internationalization capabilities.
Getting Started with Merchandising
Insights User Guide
FHR Developer Guide
FHR Documentation
Digital Quality Manager (DQM)
The Digital Quality Manager allows website monitoring for reaching high digital quality standards and improving web accessibility, SEO, and page speed.
DQM - Getting Started
Checkpoints and Benchmarking
Page Checker & Contrast Checker
DQM Documentation
Experience Orchestrator (XO)
Experience Orchestrator (XO) is an omnichannel AI-powered merchandising and recommendation platform to easily personalize the entire customer journey and retention.
XO Documentation
Digital Governance (DG)
The Digital Governance Tools offer means for complying with global privacy laws, managing cookie consent, and controlling third-party web technologies and data sharing.
DG Documentation
Digital Experience Management (DXM)
Crownpeak's enterprise-grade SaaS digital experience platform offers content management capabilities, headless development, digital asset management, search, and more.
DXM Documentation
Crownpeak CMS (FirstSpirit)
General Information
Getting Started with FirstSpirit
FirstSpirit ContentCreator
Reference Architectures for FirstSpirit
User and Access Management
DQM Connect
Technical Data Sheet
Release Notes
FirstSpirit Release Notes
FirstSpirit Release Notes+ (from October 2015)
Connect for Commerce
Documentation
Getting Started
Main Documentation
For ServerAdministrators
Troubleshooting
APIs
Frontend API
Bridge API
How-to Guides
Bridge Implementation
Creation of a Page in FirstSpirit
Display of content in the storefront
Usage of the external Bridge API endpoints
Release Notes
Developing for FirstSpirit
FirstSpirit Developer Documentation
Template Development (Quick-Guide)
Module Development in the Cloud
FirstSpirit SiteArchitect
External Synchronization
Isolated Mode Guide
FirstSpirit Access API
Basic Workflows
Documentation
Release notes
rsync deployment
AWS Services URL Redirect
Template Development for ContentCreator
Multisite Management
Content Integration
VideoManagementPro
Release notes
ServerAdministrator-Documentation
Documentation
TranslationStudio
Across Connector
Transable XML Document
Update Manual
SDL Connector
Tutorial Hooks
Tutorial Component
Default Connector
Mass Data Test
Technical Data Sheet
Whitepaper
Memoq Connector
Administrator Manual
Transable XML Document Simple
Installation Manual
Release notes
GDPR Notice
Editor Manual
Tutorial Connector
E-Commerce Integrations
Connect for SAP Commerce Cloud
Documentation
Documentation for server administrators
Release notes
Connect for SAP Commerce Cloud (Headless)
Release notes
Documentation for server administrators
Documentation
Connect for Spryker Commerce OS
Documentation
Documentation for server administrators
Release notes
Connect for Salesforce
Release notes
Documentation
Archive
On-Premises Documentation
Search
SmartSearch.js
Release notes
API Documentation
SmartSearch Connect
The module is currently not yet generally available. For more information, please contact your Crownpeak representative.
Server Administrator
Documentation
Release notes
SmartSearch
Documentation is available in all languages for version 2.4.5 and subsequent versions.
Migration Guide
Administrator's Manual
REST API Documentation
Release notes
Documentation
Headless
Template: PWA Development
CaaS Platform
Product documentation
Technical Datasheet
Release notes
Documentation
CaaS Connect
Release notes
Documentation (Module)
Documentation (Administrator)
Navigation Service
Documentation (Module)
Release notes
Documentation (Service)
Omnichannel Manager 2.x
Documentation
Release notes
API
Omnichannel Manager 3.0
JavaScript Content API Library
Fredhopper (FHR)
Digital Quality Manager (DQM)
Experience Orchestrator (XO)
Digital Governance (DG)
Digital Experience Management (DXM)
Central Services
Company
Crownpeak Website
Upcoming Events
Blog
Get Started!
Imprint
Products
Content Management System
Digital Accessibility and Quality
Privacy and Consent Management
Product Discovery
Support
Crownpeak Community
Resource Library
Technical Support
Training
Partner Portal
© 2024 Crownpeak Technology, Inc.
All rights reserved.

=== RELATED PAGE ===
FirstSpirit Online Documentation - Welcome to the FirstSpirit Online Documentation
Overview
Templates (basics)
Template development
Plug-In Development
Enhanced JSON support
Advanced topics
Tutorials
Documentation for Administrators
Documentation “Content Experience Tools”
Documentation FirstSpirit SiteArchitect
Documentation „FirstSpirit Launcher JRE“
Documentation „Installation Instructions“
Isolated Mode Guide
Documentation “External Synchronization”
Online Documentation
Sprache / Language
Deutsch / German
Englisch / English
Start page
/
Overview
Welcome to the FirstSpirit Developer Documentation
For which users is this documentation intended?
This documentation deals with template development and plug-in development in FirstSpirit. By linking different sub-areas of the template development and by the sub-division into two difficulty levels for beginners (see
Basic principles of template development
) and for advanced users (see
Template development
) this documentation provides clearly structured information and should therefore make familiarisation with the template syntax of FirstSpirit easier.
Sub-areas of the online documentation
This online documentation is divided into the following main sections:
Template development
All important aspects for the development of a FirstSpirit project in the Template Store can be read up in this section. The section is divided into the relevant sub-aspects of template development. These include:
Forms
for the definition of input components.
Rules
for influencing specific elements or characteristic of a form
Snippets
for influencing the display of objects (“teasers”)
Template syntax
divided into instructions, expressions, data types and functions.
Variables
for evaluation of contents of different areas.
Debugging
providing information about finding and fixing bugs in FirstSpirit projects.
ContentCreator
provides information about functional scope, requirements and restrictions of ContentCreator. For information about how to implement EasyEdit / InlineEdit / LiveEdit please refer to Chapter
Content Highlighting and EasyEdit
, for information about developing using JavaScript API please refer to Chapter
JavaScript API
.
Scripting
for automation of control sequences.
FirstSpirit API
as a public interface of FirstSpirit.
Security
with notes about security aspects for project and template development.
Templates (basic principles)
The topics used in most FirstSpirit projects are dealt with in this section.
Among other things there is a
step by step introduction
to the development of a FirstSpirit project. From the initial creation of a new project to the creation of page and section templates through to use of databases; simple examples are used to explain working with FirstSpirit.
ContentCreator
Requirements
,
functions
and
restrictions
for using the editing environment ContentCreator can be read up in this section.
In addition, topics that affect template development for ContentCreator will be covered:
Template development
Primarily to simplify the editorial work in the preview (EasyEdit / InlineEdit / LiveEdit).
Customization
The interface of ContentCreator can be customized to meet the requirements of the respective project.
JavaScript-API
(
WE_API
)
Enables interaction with the user interface and other ContentCreator functions via JavaScript, e.g. from documents in the preview.
Plugins
Custom extensions (modules) that extend the functionality of ContentCreator.
Advanced topics
Over-all aspects of the functionality of FirstSpirit are explained in this section.
Generation
Server-side release
Exif data
Remote access
Document groups
Tracking changes
Input assistance
(code completion)
are illustrated here. Further subjects will be added successively.
Tutorials
This section provides
exercises
for developing templates.
And now, enjoy working with FirstSpirit!
FirstSpirit is not a universal “out-of-the-box” product, but is software which is constantly being developed. New functions are continuously being integrated and customer ideas are realised. The documentation can only satisfy this constant updating process to a limited extent. It is therefore possible that a figure in this document differs from the current view in FirstSpirit due to slight time delays. Do not let it confuse you and follow the instructions as usual.
Disclaimer
This documentation is provided for information purposes only. Crownpeak may change the contents hereof without notice. This documentation is not warranted to be error-free, nor subject to any other warranties or conditions, whether expressed orally or implied in law, including implied warranties and conditions of merchantability or fitness for a particular purpose. Crownpeak specifically disclaims any liability with respect to this documentation and no contractual obligations are formed either directly or indirectly by this documentation. The technologies, functionality, services, and processes described herein are subject to change without notice.
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
FirstSpirit Online Documentation - Template development (basics)
Overview
Templates (basics)
Basics
Composition of templates
Template development
Plug-In Development
Enhanced JSON support
Advanced topics
Tutorials
Documentation for Administrators
Documentation “Content Experience Tools”
Documentation FirstSpirit SiteArchitect
Documentation „FirstSpirit Launcher JRE“
Documentation „Installation Instructions“
Isolated Mode Guide
Documentation “External Synchronization”
Online Documentation
Sprache / Language
Deutsch / German
Englisch / English
Start page
/
Templates (basics)
The basics of template development
The strict
separation
of layout, content and structure is one part of the basics of working with FirstSpirit. Here, FirstSpirit consistently supports
multiple languages
.
Every FirstSpirit project is based on what are called “templates”. These are used as a type of framework or structure to link together all of a project's content. Templates are developed individually for each project. A distinction is made between different types of templates. FirstSpirit collects all templates of a project in the templates store. A brief introduction covering this topic can be found in the
Composition of templates
section.
Chapter
First project
(menu item
Tutorials
) serves as access point into FirstSpirit template development. It shows quickly and straightforwardly with the aid of an example project how projects can be realized efficiently with FirstSpirit.
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
FirstSpirit Online Documentation - Template development (reference)
Overview
Templates (basics)
Template development
Forms
Rules
Snippets
Template syntax
Variables
ContentCreator
Debugging
Scripting
Content Highlighting and EasyEdit
FirstSpirit API
JavaScript APIs
Security
Template Wizard
Distributed development
Plug-In Development
Enhanced JSON support
Advanced topics
Tutorials
Documentation for Administrators
Documentation “Content Experience Tools”
Documentation FirstSpirit SiteArchitect
Documentation „FirstSpirit Launcher JRE“
Documentation „Installation Instructions“
Isolated Mode Guide
Documentation “External Synchronization”
Online Documentation
Sprache / Language
Deutsch / German
Englisch / English
Start page
/
Template development
Template development in FirstSpirit projects
All aspects of development of FirstSpirit projects are explained in the area of template development.
The
Forms
chapter contains descriptions of all input components, data elements and design elements which can be made available to editors by means of templates for the entering of contents. For detailed information about the template types see chapter
Composition of templates
.
The
Snippets
chapter describes how to implement for some FirstSpirit object types a teaser, consisting of an image and text. This teaser representation is for example used for search results in SiteArchitect and ContentCreator.
The
Rules
chapter describes how to create “Dynamic Forms”. By means of Dynamic Forms content can be checked for plausibility directly when it is entered by the editor for example.
In the
Template syntax
chapter the terms: instructions, expressions, data types, functions and system objects are differentiated from each other and explained in detail.
The
Variables
chapter deals with the definition of variables for saving contents and subsequent access within these variable contents.
The
Debugging
chapter contains information about how to develop and debug in FirstSpirit. Here, the FirstSpirit Template Debugger is described as well.
The
Scripting
chapter describes the creation and use of scripts with the help of BeanShell.
Use
Content Highlighting and EasyEdit
in templates for making work with ContentCreator or SiteArchitect more easier for editors.
The
FirstSpirit API
chapter refers to the official documentation of FirstSpirit API as the public interface with FirstSpirit.
Information about using the
ContentCreator
(requirements, functions, restrictions and template development) can be looked up in a special chapter:
ContentCreator
.
Information about using the
FragmentCreator
(equirements, functions, restrictions and template development) please see separate documentation (
Content Experience Tools (CXT) (→Documentation “Content Experience Tools”)
).
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
FirstSpirit Online Documentation - Plug-In Development
Overview
Templates (basics)
Template development
Plug-In Development
ContentCreator Extensions
SiteArchitect Extensions
Universal Extensions
Server Plug-Ins
Implementation and Deployment
Examples
Enhanced JSON support
Advanced topics
Tutorials
Documentation for Administrators
Documentation “Content Experience Tools”
Documentation FirstSpirit SiteArchitect
Documentation „FirstSpirit Launcher JRE“
Documentation „Installation Instructions“
Isolated Mode Guide
Documentation “External Synchronization”
Online Documentation
Sprache / Language
Deutsch / German
Englisch / English
Start page
/
Plug-In Development
Plug-In Development
FirstSpirit provides multiple extensibility opportunities that allow developers to implement custom server-side as well as client-side functionality.
This chapter aims to provide a quick-start guide towards understanding FirstSpirit Module (FSM) development and roll-out, use of the FirstSpirit Access and Access APIs and the implementation requirements of SiteArchitect and ContentCreator user interface extensions.
Content
The plug-in developer guide is structured into several chapters that describe the SiteArchitect and ContentCreator extension opportunities as well as plug-in types that may be implemented for both clients. A third chapter provides download links for example source code packages that illustrate various server and client extensions.
Client User Interface Plug-Ins
ContentCreator Extensions
This section introduces plug-in types that extend the ContentCreator functionality. It also contains a development and deployment guide for FirstSpirit Modules, specific to API functionality and roll-out for ContentCreator extensions.
SiteArchitect Extensions
This section illustrates extensions of SiteArchitect functionality.
Universal Extensions
The plug-in types introduced in this section are available in both the SiteArchitect and the ContentCreator.
Server Plug-Ins
Server Plug-Ins
This chapter contains documentation on select server-side functionality which may be extended with plug-ins. The functionality described here is usually not visible to editorial users of FirstSpirit.
Developing FirstSpirit Modules
Implementation and Deployment
This section provides an overview of several FirstSpirit-specific activities that may be implemented using the Access APIs.
Example Modules
This section provides download links for FirstSpirit Modules containing example code that illustrate server- and client-side plug-ins.
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
FirstSpirit Online Documentation - Advanced topics
Overview
Templates (basics)
Template development
Plug-In Development
Enhanced JSON support
Advanced topics
Generation
Server-side release
Media galleries
Exif data
Remote access
Document groups
Tracking changes
Input assistance
Tutorials
Documentation for Administrators
Documentation “Content Experience Tools”
Documentation FirstSpirit SiteArchitect
Documentation „FirstSpirit Launcher JRE“
Documentation „Installation Instructions“
Isolated Mode Guide
Documentation “External Synchronization”
Online Documentation
Sprache / Language
Deutsch / German
Englisch / English
Start page
/
Advanced topics
Advanced topics
This chapter deals with further aspects, which are interesting for working with FirstSpirit.
The following topics are elucidated:
Generation
: Creating and delivering content in FirstSpirit is based on the “pre-generation” principle. Wherever possible, the content is not first produced on the live system at the time of the user query (live rendering), but is instead already on the FirstSpirit server (i.e. in a less time-sensitive offline mode) for what is called “Generation”.
Server-side release
: In addition to release via a workflow, all objects in FirstSpirit can be released server-side via the Access API. To do so, there are methods of defining the different release settings for an object. In this way, the specific release can be used to release additional objects dependent on the current object, such as the complete parent chain and child elements of the object to be released.
Exif data
: This page describes how to store Exif data in the Media Store.
Remote access
: FirstSpirit allows to access contents of another project from one project. This chapter lists amongst others the input components which can be configured for remote access.
Document groups
: Several independent pages can be grouped together to one unit by means of the “Document groups”. The hierarchical structure, which is defined in the Site Store for these pages, will be negated. This chapter shows possible applications and concrete application examples.
Tracking changes
: FirstSpirit provides an option for tracking changes via the FirstSpirit Access API. Access to the revision metadata is possible via certain API functions.
Input assistance
: Code completion enables all available tags, parameters and values to be shown and inserted at the insert mark on respective tab with one keystroke.
Successively, further topics will be added.
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
FirstSpirit Online Documentation - Tutorials
Overview
Templates (basics)
Template development
Plug-In Development
Enhanced JSON support
Advanced topics
Tutorials
First project
Workflows
Documentation for Administrators
Documentation “Content Experience Tools”
Documentation FirstSpirit SiteArchitect
Documentation „FirstSpirit Launcher JRE“
Documentation „Installation Instructions“
Isolated Mode Guide
Documentation “External Synchronization”
Online Documentation
Sprache / Language
Deutsch / German
Englisch / English
Start page
/
Tutorials
Tutorials for Template developers
In this chapter you can find exercises for developing templates.
First project
serves as an entry in the template development.
Starting point for the exercise is an “empty” project, which is to be populated with content step by step.
Workflows
: This chapter provides some examples for how to model workflows. These examples can are used for better explain structure and use of workflows.
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
Documentation for Administrators - Introduction
Introduction
Note on the functional scope
Architecture
Overview applications for administration and monitoring
Structure of this documentation
Technical requirements and recommendations
Installation
FirstSpirit Server control
FirstSpirit Server configuration
FirstSpirit Server backing up and recovering
Updating FirstSpirit
FirstSpirit web application configuration
FirstSpirit start page
FirstSpirit ServerManager
FirstSpirit ServerMonitoring
FirstSpirit JMX Console
User permission configuration
Notes about GDPR
FirstSpirit Online Documentation
Documentation for Administrators
-= Language =-
Deutsch
English
Introduction
Welcome to the documentation for FirstSpirit Administrators
Table of contents
•
Feature scope description for our products
•
Deployment models
•
Cloud / SaaS
•
Hybrid
•
On-Premises
•
Authorization and administrator concept
•
Administrative roles (SaaS)
•
Administrative roles (On-Premises)
This documentation is aimed at
FirstSpirit administrators
and provides information on configuring, managing and monitoring FirstSpirit.
Additional documentation for administrators:
Introduction (→Installation Instructions)
Detailed information about installation and updating FirstSpirit servers.
FirstSpirit Release Notes
:
Crownpeak develops software on the basis of a continuous improvement process. Crownpeak releases new FirstSpirit versions on a monthly basis. Each update contains new features and fixes which are explained in detail in the Release Notes.
FirstSpirit Technical Datasheet
: Technical requirements and recommendations for using FirstSpirit.
This and additional documentation
for other user groups
and
FirstSpirit products
can be found at
https://docs.e-spirit.com
.
This document is provided for information purposes only. Crownpeak may change the contents hereof without notice. This document is not warranted to be error-free, nor subject to any other warranties or conditions, whether expressed orally or implied in law, including implied warranties and conditions of merchantability or fitness for a particular purpose. Crownpeak specifically disclaims any liability with respect to this document and no contractual obligations are formed either directly or indirectly by this document. The technologies, functionality, services, and processes described herein are subject to change without notice.
Feature scope description for our products
This documentation describes the full functional scope of our products.
Further restrictions may apply based on:
your
license agreement
with Crownpeak Technology GmbH,
your chosen
deployment model
and
your
role
(and
authorization
) in the FirstSpirit environment.
This means that certain functions and capabilities described in the documentation may not be available to you or not available in full, other functions and capabilities may be provided to you preconfigured and cannot be activated or deactivated manually.
Information on deployment models and the respective roles can be found further down on this page.
If you have any questions or problems related to missing or incorrect functionality, please contact
Technical Support
or your account manager.
Deployment models
Cloud / SaaS
Our Cloud/SaaS model offers you a full product that is executed and managed by Crownpeak as a service provider. There are different shapings within the model. A shaping includes FirstSpirit components as well as components that are used outside FirstSpirit and even potentially outside our Cloud (see hybrid approach).
Hybrid
Hybrid solutions offer you a link between the provision of services via the Crownpeak Cloud and an on-premises installation. You can keep your on-premises solution, but connect yourself to the cloud with some requirements, with personalization of content via FirstSpirit ICE for example. This is usually done for security reasons or when complete migration to the cloud becomes costly and time-consuming.
Hybrid solutions are possible by using FirstSpirit ICE or FirstSpirit CaaS, which are only available in SaaS operation, in conjunction with an on-premises installation.
On-Premises
In the on-premises model, all resources are installed directly on site. This model is perfect for companies that want to build their own digital ecosystem. It is highly customizable and gives you the flexibility to choose the infrastructure on which to run your application.
Each deployment model has a different user, authorization, and administrator concept.
Authorization and administrator concept
Administrative roles (SaaS)
In the SaaS environment, Crownpeak as a service provider takes over the installation, operation, and maintenance of FirstSpirit and guarantees reliable performance.
Users and access authorizations in the cloud environment are also managed by Crownpeak via an identity provider (Keycloak). The administration concept provides the role of a project administrator on the client side.
Project administrators in the SaaS environment can by default:
change their project's properties
export their projects
cleanup their projects
Administrative roles (On-Premises)
The user with the ID 1 who was automatically created when a FirstSpirit Server was installed is named
Administrator
. There is only one administrator per Server. In principle, he has got all rights for FirstSpirit Server and applications. However, this user can be blocked from accessing specific projects (“ServerManager / Project / Settings / Options / Block administrator”). He is always server administrator at the same time, this role cannot be taken away from this user (he is “super administrator”).
Server administrators
always hold all of the permissions of the administrator. The role of server administrator can only be assigned to a FirstSpirit user by the administrator or by another server administrator. There can be multiple server administrators per server.
Administrators and server administrators can for example:
create / export / import / delete new projects
create users
change the properties of all projects
define project administrators
install und uninstall editor and function components
execute special server operations
Project administrators
always hold all permissions in projects in which they have been added to the default “Administrators” group (see
Add user
).
By default, they can:
change their project's properties
export their projects
cleanup their projects
FirstSpirit is not a universal “out-of-the-box” product, but continuously developed software. New functionalities and customer suggestions are constantly integrated and realized. These constant updates can only be reflected in the documentation to a limited degree. This may result in some figures in this documentation varying from the current FirstSpirit view. Please do not be confused by this, and just follow the instructions as normal.
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
Documentation “Content Experience Tools” - Introducing Content Experience Tools (CXT)
Introduction
Content Experience Tools (CXT)
FragmentCreator
FAQ
Glossary
Overview
Technical requirements
Installation / Modules
Projects
Templates
Permissions and Roles
Workflows
External interfaces
FragmentCreator: for editors
FirstSpirit Online Documentation
Documentation “Content Experience Tools”
-= Language =-
Deutsch
English
Introducing CXT
Introducing Content Experience Tools (CXT)
Many different roles are involved in the creation and distribution of content. Each one deals with a different aspect of the same content. As a result, the scope of each person’s contribution can vary widely. A modern digital editorial strategy will include a multitude of areas of expertise, such as the following:
Editorial work (content creation)
Translation
Structuring and preparation of content for subsequent consumers
(Personalized) delivery of digital content
Analysis and evaluation of user interactions (web analytics, measuring success, etc.)
Implementation of marketing and PR strategies; planning and creation of campaigns
...
The right product for each user role
Each of these roles sets completely different criteria for the content experience.
One way of dealing with this is to integrate all features in a single product. So each time a new requirement is added, the range of features grows and the product will eventually become expensive and confusing and thus inhibits rather than supports the work process. Moreover, most users only need a fraction of this level of functionality. In fact, just one feature will do, while the next user – according to his or her role and duties – will need a different one entirely.
Our approach and the vision behind CXT:
We want to offer our customers versatile content tools.
Every user is to get a tool tailored to his tasks.
True to the motto “Only keep what brings you joy. Own only what you need”. With CXT, the very individual needs of individuals are put in focus. Each person or role gets
exactly the view of the content they need
and receives
support for exactly the activities they can process
according to their tasks or roles.
Example:
While an “Author” needs extensive support in writing the content, the “Campaign Manager” is more concerned with the success of a marketing strategy.
Author:
Views:
Primarily content-focused
Activities:
Content creation, editing, deletion, release, etc.
Campaign Manager:
Views:
Primarily yield and analysis – content only to a small extent
Activities:
Campaign planning, target audience analysis, etc.
Each of the two roles thus requires its own view of the content and tailored support in carrying out the relevant tasks.
CXT: The tailor-made tools
In order to implement this role-focused concept, we are introducing a new technology – the
Content Experience Tools (CXT)
.
With CXT it is possible to build tailored CXT clients from existing modules (called “tools”). Each of these pre-configured clients then offers an entirely specific view of a piece of content and support for individual tasks.
The author from the example gets a client which is designed / tailored from the ground up for creating and editing content.
At the same time, the “Campaign Manager” has a client focused on yield and analysis of this content which helps users plan and implement marketing campaigns:
Adding additional requirements
If work processes or business logics change or expand, the customer or partner can simply add suitable modules.
Example:
A customer wants more help in terms of “campaign management” so that they can schedule campaigns better and couple them with discount offers or a bonus system.
A different customer wants to improve cooperation within their team and needs help in terms of “collaboration”.
Integration of new tools into CXT clients
Each user or role receives a customized client that is completely tailored to their individual requirements and tasks:
Customers are free to decide which tools they want to use in their CXT clients and which they do not need.
CXT – the platform
All Content Experience Tools are based on a common platform.
The CXT platform:
provides support for the integration of new tools
provides lightweight web services for FirstSpirit functions (login, user context, and workflow services)
offer greater flexibility for the implementation of specific project requirements
facilitates the use of a REST-API through which the CXT services can be accessed externally (e.g., from customer apps)
The tools:
are implemented by Crownpeak (or partners) as CXT modules and added to the platform
meet special requirements and can be used for a range of activities
can be developed quickly because they focus on a very limited range of functions
all make use of a consistent, easy-to-learn user interface
Summary
Content Experience Tools platform:
A growing family of Content Experience Tools
A homogeneous, flexible and scalable development landscape
Tailored CXT clients:
A focus on individual roles, e.g., creation of content fragments
Combining various views of content and activities
Features a standardized user interface
Smaller tools = more effective products
Manageable functionality
Delivering more value to customers in less time
Faster market launch (“time to market”)
Note:
FragmentCreator is the first step on the way to a Content Experience Platform.
The
CXT concept
described here provides a “vision” for the future and defines the goals and strategic framework for further development.
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
Documentation FirstSpirit SiteArchitect - Topic of this documentation
Introduction
The FirstSpirit concept
FirstSpirit start page
FirstSpirit SiteArchitect
Context menus
Page Store
Data Store
Media Store
Site Store
Global settings
Input forms
General operation
Workflows
Permissions in FirstSpirit
FirstSpirit Online Documentation
Documentation FirstSpirit SiteArchitect
-= Language =-
Deutsch
English
Introduction
Introduction
This documentation describes all relevant aspects for users of
FirstSpirit
™ SiteArchitect.
Based on the user interface of FirstSpirit SiteArchitect and its screen view divided into three,
the elements of the tree structure (in the left-hand column of the screen) are described first,
followed by the editing screens for the individual objects and other functions in the center column,
and finally the functions in the right-hand column.
Template development is
not
covered in this documentation; for detailed information on this topic see
Overview (→FirstSpirit Online Documentation)
.
Sections of this documentation
FirstSpirit start page
Section
FirstSpirit start page
explains the options available for starting SiteArchitect.
FirstSpirit SiteArchitect
Section
FirstSpirit SiteArchitect
describes the SiteArchitect user interface and its different areas and control elements.
Context menus
Section
Context menus
describes all the functions executed via context menus in the individual SiteArchitect stores in detail.
Page Store
In Section
Page Store
the maintenance of editorial content will be described. The setting options for pages and sections are explained in detail.
Data Store
Section
Data Store
deals with the Data Store for creating and managing highly structured content.
Media Store
Section
Media Store
describes the Media Store for managing all media used. The setting options available on the individual levels are explained in detail. In addition, use of the Media Import Wizard is described.
Site Store
Section
Site Store
deals with the navigation structure of a website displayed in the Site Store. The setting options at the level of a menu, page reference, and document group are explained in detail here.
Global Content Area
Section
Global Content Area
describes the functions of the Global Content Area (maintenance of small components of pages), Project Settings (definition of replacement rules), URL Settings (definition of URLs for pages), and User Settings (integration of editors and browsers).
Input forms
Section
Input forms
provides a detailed overview of the standard FirstSpirit input forms.
General operation
Section
General operation
deals with the functions for general use of FirstSpirit.
Workflows
Section
Workflows
describes the function of workflows.
Permissions in FirstSpirit
Section
Permissions in FirstSpirit
describes the mechanisms provided by FirstSpirit for assigning and checking permissions, and outlines their specific use. A distinction is made between permissions valid for a user of FirstSpirit, for example, for an editor (editorial permissions), and permissions defined for a visitor to the website generated with FirstSpirit (user permissions).
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
Documentation “FirstSpirit Launcher JRE” - In a nutshell
Introduction
In a nutshell
The new Java world
FirstSpirit and Java
The module
Categories and selection
Versions
FirstSpirit Online Documentation
Documentation “FirstSpirit Launcher JRE”
-= Language =-
Deutsch
English
Start page
In a nutshell
The Java world is very complex regarding release periods and licensing conditions (see
The new Java world
).
The current situation and Crownpeak's strategy regarding Java support for FirstSpirit will be explained in more detail below.
Crownpeak aims to significantly reduce the increased complexity of Java usage for its customers and partners by choosing suitable technologies for this purpose. The use of FirstSpirit should be as simple as possible for customers and partners and they should not have to concern themselves with the selection of a suitable Java Runtime Environment.
Our premise: “FirstSpirit users can concentrate fully on their tasks – Crownpeak will take care of the rest.”
The most important points of Crownpeak's strategy regarding Java usage are as follows:
For FirstSpirit, Crownpeak supports both the
current
Java version as well as the
latest LTS
(Long-Term-Support) variant. This applies to both the
FirstSpirit Server
and the
FirstSpirit desktop applications
.
(History see
FirstSpirit and Java
)
Since it can no longer be assumed that Java is installed on all desktops, Crownpeak will continue to supply a
continuously updated
,
extensively tested
, and
license-free Java Runtime Environment
in the future, which will be used (automatically and without installation) for the FirstSpirit desktop applications.
As the diversity/variability in the Java environment will presumably continue to increase in the future, Crownpeak provides technology which makes it easy to change the Java environment. The Java versions which can be selected are compiled by Crownpeak.
The Java version can be selected based on two simple quality levels: “stable” and “experimental”. Crownpeak selects one stable version for standard use in the FirstSpirit desktop applications (→ “recommended” Java version).
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights reserved. | FirstSpirit 2025.6 |
Data privacy

=== RELATED PAGE ===
Installation Instructions - Introduction
Introduction
Provisioning
Preparing the operating system (Linux)
Installing FirstSpirit
Installing the license file
Troubleshooting
Updating FirstSpirit
Uninstalling FirstSpirit
Starting applications
Quick guide for test servers
FirstSpirit Online Documentation
Installation Instructions
-= Language =-
Deutsch
English
Introduction
Introduction
Table of contents
•
Technical requirements and recommendations
•
System architecture
•
Components of the Server
•
FirstSpirit applications
•
Client/server communication
•
Supplementary documentation
•
Additional installation and administration instructions
Due to the application of Java, FirstSpirit is a widely platform-independent client/server system. Basically, the installation only affects the FirstSpirit Server, since the applications are either operated as a web application via a web browser (ContentCreator, Fragment Creator, ServerMonitoring) or managed via FirstSpirit Launcher (SiteArchitect, ServerManager).
An installed FirstSpirit Server has a uniform design on all operating systems due to its platform independency. Discrepancies only occur during the installation process. Here, all the files of the FirstSpirit Server, excluding a few files required for the system start, are installed in the destination directory.
Technical requirements and recommendations
The
Technical requirements and recommendations (→Documentation for Administrators)
apply.
System architecture
Components of the Server
FirstSpirit Server
The FirstSpirit Server itself is a Java application.
Tanuki Java Service Wrapper
The Java interpreter necessary for the operation of the server is started via the
Java Service Wrapper
. This Java Service Wrapper is the only platform-dependent component. The Wrapper is an application, compatible to the respective operating system and CPU architecture which monitors and controls the Java process (see
Java VM and Wrapper (fs-wrapper*.conf) (→Documentation for Administrators)
).
Java SE Development Kit (JDK or SDK)
A Java SE Development Kit (JDK or SDK) is not provided by Crownpeak For information on supported and recommended JDK versions for FirstSpirit see
Technical requirements and recommendations (→Documentation for Administrators)
.
Start script
The Java Service Wrapper is started and stopped via a
Shell script
or a
Windows system service
.
From the operating system's point of view there are only 2 processes, Java and Java Wrapper, available during the runtime of the FirstSpirit Server whereas the Java process can comprise hundreds of threads.
Optionally:
External relational database
For information on supported and recommended databases for FirstSpirit see
Technical requirements and recommendations (→Documentation for Administrators)
.
The integrated “Apache Derby” database is not suitable for productive operation and should only be used for test purposes.
Optionally:
Web server and a JSP/Servlet engine
For information on supported and recommended servlet engines / application servers for FirstSpirit see
Technical requirements and recommendations (→Documentation for Administrators)
.
The integrated modules “Embedded Tomcat” and “Jetty Web Server” provide a
JSP/servlet engine
that runs as part of the FirstSpirit server in the same VM.
The use of these modules is not suitable for productive operation and should only be used for test purposes.
For more complex configuration requirements (e.g. memory size adjustments, timeouts, number of threads per deployed application...) the use of an external web serve is recommended (especially Apache Tomcat). Complex deployment scenarios, such as use in a reverse proxy scenario, are also not supported.
FirstSpirit applications
FirstSpirit web apps can be accessed directly in the web browser:
ContentCreator
FragmentCreator
(→Documentation Content Experience Tools)
ServerMonitoring (see
FirstSpirit ServerMonitoring (→Documentation for Administrators)
)
FirstSpirit desktop apps are started via the FirstSpirit Launcher:
SiteArchitect (see
FirstSpirit SiteArchitect (→Documentation FirstSpirit SiteArchitect)
)
ServerManager (see
FirstSpirit ServerManager (→Documentation for Administrators)
)
Client/server communication
Communication between client and server takes place via HTTP and optionally via a FirstSpirit protocol (SOCKET).
The standard value
for the HTTP port is
8000/tcp
,
the port for the FirstSpirit protocol (SOCKET) is
1088/tcp
.
If one of the ports has already been reserved by the operating system, another free port is automatically selected during the installation. The selected port will be written to the configuration file
~FS/conf/fs-server.conf
(
~FS
is the installation directory of the FirstSpirit server).
Ports can also be changed manually via this configuration file after the FirstSpirit installation.
Most changes to the configuration file
fs-server.conf
require a server restart (for example after changing the port).
Authentication is required for all connections to the FirstSpirit server.
This means that all web applications that communicate with the FirstSpirit server must first authenticate themselves (for further information please see
Authentication of all internal connections (→Documentation for Administrators)
).
Redirections are restricted for security reasons.
URLs can be defined using the optional parameter
allowedRedirectHosts
in the configuration file
fs-server.conf
to which a redirect is to be allowed (for further information see
JumpToServlet and Webedit ForwardAction (→Documentation for Administrators)
). If an HTTP error 403 with the error cause “Forbidden request host:” occurs during access to FirstSpirit, it must be checked whether access to the FirstSpirit server with the specified host name is to be permitted in the URL and, if necessary, the corresponding host name is to be added to the
allowedRedirectHosts
parameter in the
fs-server.conf
file. Example:
allowedRedirectHosts=localhost,firstspirit,firstspirit.e-spirit.com,192.1.1.1
For more detailed information abot the client/server configuration see
Communication (→Documentation for Administrators)
.
Supplementary documentation
Additional installation and administration instructions
Technical requirements and recommendations (→Documentation for Administrators)
for FirstSpirit. Information about supported operational systems, hardware and Java versions.
Introduction (→Documentation for Administrators)
explains all aspects of the administration and configuration of FirstSpirit.
FirstSpirit Release Notes:
Among other things, the FirstSpirit Release Notes provide information about new functionality, which is published for the first time with the current version, about changes in standard behavior and bug fixes.
The release notes for the current FirstSpirit version will be made available (in PDF format) via
docs.e-spirit.com
the
Community
Print version
|
Page start
© 2005 - 2025 Crownpeak Technology GmbH | All rights 

[Content truncated due to length]