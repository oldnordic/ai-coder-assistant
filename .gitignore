# --- AI Coder Assistant Specific Ignores ---
# Ignore all generated data, logs, and local output.
# This single line handles docs, learning_data, and all processed artifacts
# like models, vector stores, and datasets.
/data/
/allthingdocs/
run_tests_and_fixes.py
test_web_scraping_ui.py
run_tests_and_fixes.py
run_api_tests.py
# Ignore old data directories that might still exist at the root
/documentation_corpus/
/tmp/
/src/data/
/data/
# Ignore log files and the log directory
/logs/
*.log

# --- Database and Persistence Files ---
# Ignore SQLite database files
*.db
*.sqlite
*.sqlite3
/src/backend/data/*.db
/src/backend/data/*.sqlite
/src/backend/data/*.sqlite3

# --- Test Artifacts and Coverage ---
# Ignore test artifacts and coverage reports
.pytest_cache/
.coverage
.coverage.*
htmlcov/
.tox/
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# --- Build and Distribution Artifacts ---
# Ignore build outputs for all platforms
build/
dist/
*.egg-info/
.installed.cfg
*.egg
*.spec
*.exe
*.dmg
*.deb
*.rpm
*.AppImage

# --- Platform-specific Build Files ---
# Windows
*.msi
*.exe
*.bat
# macOS
*.dmg
*.pkg
*.app
# Linux
*.deb
*.rpm
*.AppImage
*.snap

# --- Performance Monitoring Data ---
# Ignore performance monitoring and analytics data
/performance_data/
/analytics_data/
*.perf
*.metrics
*.benchmark

# --- Generated Documentation ---
# Ignore auto-generated documentation
/docs/generated/
/docs/api/
*.rst
*.html

# Ignore generated report files and audit files
*_report.md
*_report.html
project_structure.txt
audit_structure.py
ai__init__.py

# Ignore taskmaster directory and files (but keep the reports for documentation)
.taskmaster/reports/*.md
.taskmaster/tasks/
*.taskmaster

# Ignore specific report files
ai_code_review_report.md
ai_code_review_report.html

# Ignore PyInstaller build artifacts
*.spec

# Ignore any downloaded or scraped documentation
/docs/downloaded/
/docs/scraped/
/docs/external/

# Ignore llama.cpp directory - users must download it themselves
/llama.cpp/

# Ignore AI cache files
/src/tmp/ai_cache/
*.pkl

# Ignore model files and weights
*.gguf
*.bin
*.safetensors
*.pt
*.pth
*.ckpt
*.model
/models/
/model_weights/
/trained_models/

# Ignore vector database files
*.faiss
*.index
/vector_db/
/embeddings/

# Ignore training data and datasets
/training_data/
/datasets/
*.jsonl
*.json.gz
*.txt.gz

# --- Continuous Learning Specific Ignores ---
# Ignore continuous learning data and databases
/continuous_learning_data/
*.db
*.sqlite
*.sqlite3
/feedback_data/
/model_updates/
/replay_buffer/

# Ignore model backups and checkpoints
*_backup_*/
/model_backups/
/checkpoints/
*.backup

# Ignore temporary training files
/tmp/feedback_*.txt
/tmp/training_*.txt
*.tmp
*.temp

# Ignore performance evaluation data
/performance_logs/
/evaluation_results/
*.eval

# --- Development Documentation Ignores ---
# Ignore development and planning documentation that's not needed in git
APP_PLAN_AND_COMPARISON.md
REFACTORING_PLAN.md
REFACTORING_PROGRESS.md
WEB_SCRAPING_FIXES.md
FINAL_FIXES_SUMMARY.md
FIXES_SUMMARY.md
ISSUES_AND_FIXES.md
LICENSE_CHANGE_SUMMARY.md
PERFORMANCE_IMPROVEMENTS.md
PR_CREATION_FEATURE.md
BUILD_PLAN.md
ai_code_review_report.txt
CALLBACK_FIX_SUMMARY.md
V3_0_0_ARCHITECTURAL_OVERHAUL_SUMMARY.md
collaboration_test_output*.txt

# Ignore temporary and cache directories
/tmp/
/cache/
/.cache/
*.tmp
*.temp

# Ignore IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Ignore Python cache and compiled files
__pycache__/
*.py[cod]
*$py.class
*.so
.pytest_cache/
.coverage
.coverage.*
.cache

# Ignore virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Ignore build and distribution files
build/
dist/
*.egg-info/
.installed.cfg
*.egg

# Ignore Jupyter notebook checkpoints
.ipynb_checkpoints/

# Ignore configuration files with sensitive data
config.ini
secrets.json
.env.local
.env.production

# Ignore backup files
*.bak
*.backup
*.old

# --- Standard Python Ignores (from your original file) ---

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a parent script from a different directory,
#  so THIS file makes sure that local builds dont track these files
*.pyzw

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.pytest_cache/
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# --- Keep Important Documentation ---
# Keep taskmaster reports for documentation
!.taskmaster/reports/continuous_learning_task.md

# Ignore generated markdown reports
src/backend/reports/*.md

# Ignore unnecessary markdown files in the root, but keep main documentation
/*.md
!README.md
!CHANGELOG.md
!ARCHITECTURE.md
!BUILD_README.md
!FEATURE_SUMMARY.md
APP_PLAN_AND_COMPARISON.md
collaboration_test_output2.txt

# --- Additional Development Files ---
# Ignore test files that are not part of the test suite
test_web_scraping_ui.py
run_tests_and_fixes.py
run_api_tests.py

# Ignore disabled GitHub workflows to prevent accidental re-enabling
.github/workflows/*.disabled

# Ignore lock files (except for specific ones that should be tracked)
*.lock
!poetry.lock
!Pipfile.lock

# Ignore temporary files created during development
*.pid
*.lock
*.tmp
*.temp

# Ignore any files with test/debug in the name that aren't in tests/
test_*.py
debug_*.py
temp_*.py
fix_*.py

# Ignore any files with output in the name
*_output.txt
*_output.log
*_output.md

# Ignore any files with summary in the name (except main documentation)
*_summary.md
*_summary.txt
*_summary.log

# Ignore any files with fixes in the name
*_fixes.md
*_fixes.txt
*_fixes.log

# Ignore any files with progress in the name
*_progress.md
*_progress.txt
*_progress.log

# Ignore any files with issues in the name
*_issues.md
*_issues.txt
*_issues.log

# Ignore any files with plan in the name (except main documentation)
*_plan.md
*_plan.txt
*_plan.log

# Ignore any files with comparison in the name
*_comparison.md
*_comparison.txt
*_comparison.log

# Ignore any files with implementation in the name
*_implementation.md
*_implementation.txt
*_implementation.log

# Ignore any files with enhancement in the name
*_enhancement.md
*_enhancement.txt
*_enhancement.log

# Ignore any files with security in the name (except main documentation)
*_security.md
*_security.txt
*_security.log

# Ignore any files with task in the name (except main documentation)
*_task.md
*_task.txt
*_task.log

# Ignore any files with architectural in the name (except main documentation)
*_architectural.md
*_architectural.txt
*_architectural.log

# Ignore any files with overhaul in the name
*_overhaul.md
*_overhaul.txt
*_overhaul.log

# Ignore any files with callback in the name
*_callback.md
*_callback.txt
*_callback.log

# Ignore any files with v3 in the name (except main documentation)
*v3*.md
*v3*.txt
*v3*.log

# Ignore any files with v2 in the name (except main documentation)
*v2*.md
*v2*.txt
*v2*.log

# Ignore any files with v1 in the name (except main documentation)
*v1*.md
*v1*.txt
*v1*.log
THREAD_SAFETY_AUDIT_REPORT.md
TASKMASTER.md
GITHUB_SERVICES_DISABLED.md
check_github_status.sh