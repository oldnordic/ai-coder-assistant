Bit-wise operations — NumPy v2.2 Manual
Skip to main content
Back to top
Ctrl
+
K
User Guide
API reference
Building from source
Development
Release notes
Learn
More
NEPs
Choose version
GitHub
User Guide
API reference
Building from source
Development
Release notes
Learn
NEPs
Choose version
GitHub
Section Navigation
NumPy’s module structure
Array objects
Universal functions (
ufunc
)
Routines and objects by topic
Constants
Array creation routines
Array manipulation routines
Bit-wise operations
numpy.bitwise_and
numpy.bitwise_or
numpy.bitwise_xor
numpy.invert
numpy.bitwise_invert
numpy.left_shift
numpy.bitwise_left_shift
numpy.right_shift
numpy.bitwise_right_shift
numpy.packbits
numpy.unpackbits
numpy.binary_repr
String functionality
Datetime support functions
Data type routines
Mathematical functions with automatic domain
Floating point error handling
Exceptions and Warnings (
numpy.exceptions
)
Discrete Fourier Transform (
numpy.fft
)
Functional programming
Input and output
Indexing routines
Linear algebra (
numpy.linalg
)
Logic functions
Masked array operations
Mathematical functions
Miscellaneous routines
Polynomials
Random sampling (
numpy.random
)
Set routines
Sorting, searching, and counting
Statistics
Test support (
numpy.testing
)
Window functions
Typing (
numpy.typing
)
Packaging (
numpy.distutils
)
NumPy C-API
Array API standard compatibility
CPU/SIMD optimizations
Thread Safety
Global Configuration Options
NumPy security
Status of
numpy.distutils
and migration advice
numpy.distutils
user guide
NumPy and SWIG
NumPy reference
Routines and objects by topic
Bit-wise operations
Bit-wise operations
#
Elementwise bit operations
#
bitwise_and
(x1, x2, /[, out, where, ...])
Compute the bit-wise AND of two arrays element-wise.
bitwise_or
(x1, x2, /[, out, where, casting, ...])
Compute the bit-wise OR of two arrays element-wise.
bitwise_xor
(x1, x2, /[, out, where, ...])
Compute the bit-wise XOR of two arrays element-wise.
invert
(x, /[, out, where, casting, order, ...])
Compute bit-wise inversion, or bit-wise NOT, element-wise.
bitwise_invert
(x, /[, out, where, casting, ...])
Compute bit-wise inversion, or bit-wise NOT, element-wise.
left_shift
(x1, x2, /[, out, where, casting, ...])
Shift the bits of an integer to the left.
bitwise_left_shift
(x1, x2, /[, out, where, ...])
Shift the bits of an integer to the left.
right_shift
(x1, x2, /[, out, where, ...])
Shift the bits of an integer to the right.
bitwise_right_shift
(x1, x2, /[, out, where, ...])
Shift the bits of an integer to the right.
Bit packing
#
packbits
(a, /[, axis, bitorder])
Packs the elements of a binary-valued array into bits in a uint8 array.
unpackbits
(a, /[, axis, count, bitorder])
Unpacks elements of a uint8 array into a binary-valued output array.
Output formatting
#
binary_repr
(num[, width])
Return the binary representation of the input number as a string.
previous
numpy.rot90
next
numpy.bitwise_and
On this page
Elementwise bit operations
Bit packing
Output formatting
© Copyright 2008-2024, NumPy Developers.
Created using
Sphinx
7.2.6.
Built with the
PyData Sphinx Theme
0.16.0.